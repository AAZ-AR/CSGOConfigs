/////////////////////////
// Commands/CVARs List //
/////////////////////////

// This file contains a list of all the commands available in CS:GO.
// Some commands are explained, others aren't.
// Original Poster: http://steamcommunity.com/sharedfiles/filedetails/?id=275969700

// Table Of Contents:
// ------------------
// +                   1
// -                   55
// ai_                 117
// ammo_               147
// bot_                184
// budget_             223
// cam_                253
// cash_               265
// cl_                 313
// demo_               575
// ent_                633
// fog_                687
// gameinstructor_     729
// inferno_            812
// joy_                848
// map_                941
// mat_                947
// mm_                 1074
// mp_                 1090
// nav_                1242
// net_                1384
// player_             1491
// r_                  1582
// snd_                1847
// spec_               1957
// sv_                 2006
// tv_                 2199
// voice_              2283
// vprof_              2308
// weapon_             2357

1.	+alt1
2.	+alt2
3.	+attack
4.	+attack2
5.	+back
6.	+break
7.	+camdistance
8.	+camin
9.	+cammousemove
10.	+camout
11.	+campitchdown
12.	+campitchup
13.	+camyawleft
14.	+camyawright
15.	+commandermousemove
16.	+csm_rot_x_neg
17.	+csm_rot_x_plus
18.	+csm_rot_y_neg
19.	+csm_rot_y_plus
20.	+duck
21.	+forward
22.	+graph
23.	+grenade1
24.	+grenade2
25.	+jlook
26.	+jump
27.	+klook
28.	+left
29.	+lookdown
30.	+lookspin
31.	+lookup
32.	+mat_texture_list
33.	+movedown
34.	+moveleft
35.	+moveright
36.	+moveup
37.	+posedebug // Turn on pose debugger or add ents to pose debugger UI
38.	+reload
39.	+right
40.	+score
41.	+showbudget
42.	+showbudget_texture
43.	+showbudget_texture_global
44.	+showscores
45.	+showvprof
46.	+speed
47.	+strafe
48.	+use
49.	+vgui_drawtree
50.	+voicerecord
51.	+walk
52.	+zoom
53.	+zoom_in
54.	+zoom_out
55.	-alt1
56.	-alt2
57.	-attack
58.	-attack2
59.	-back
60.	-break
61.	-camdistance
62.	-camin
63.	-cammousemove
64.	-camout
65.	-campitchdown
66.	-campitchup
67.	-camyawleft
68.	-camyawright
69.	-commandermousemove
70.	-csm_rot_x_neg
71.	-csm_rot_x_plus
72.	-csm_rot_y_neg
73.	-csm_rot_y_plus
74.	-duck
75.	-forward
76.	-graph
77.	-grenade1
78.	-grenade2
79.	-jlook
80.	-jump
81.	-klook
82.	-left
83.	-lookdown
84.	-lookspin
85.	-lookup
86.	-mat_texture_list
87.	-movedown
88.	-moveleft
89.	-moveright
90.	-moveup
91.	-posedebug // Turn off pose debugger or hide ents from pose debugger UI
92.	-reload
93.	-right
94.	-score
95.	-showbudget
96.	-showbudget_texture
97.	-showbudget_texture_global
98.	-showscores
99.	-showvprof
100.	-speed
101.	-strafe
102.	-use
103.	-vgui_drawtree
104.	-voicerecord
105.	-walk
106.	-zoom
107.	-zoom_in
108.	-zoom_out
109.	achievement_debug "0" // Turn on achievement debug msgs.
110.	achievement_disable "0" // Turn off achievements.
111.	addip // Add an IP address to the ban list.
112.	adsp_debug "0"
113.	adsp_reset_nodes
114.	ainet_generate_report // Generate a report to the console.
115.	ainet_generate_report_only // Generate a report to the console.
116.	air_density // Changes the density of air for drag computations.
117.	ai_clear_bad_links // Clears bits set on nav links indicating link is unusable
118.	ai_debug_los "0" // itl
119.	ai_debug_node_connect // Debug the attempted connection between two nodes
120.	ai_debug_shoot_positions "0"
121.	ai_disable // Bi-passes all AI logic routines and puts all NPCs into their idle animations. Can be used to get NPCs out of your way and to t
122.	ai_drawbattlelines "0"
123.	ai_drop_hint // Drop an ai_hint at the players current eye position.
124.	ai_dump_hints
125.	ai_hull // Controls which connections are shown when ai_show_hull or ai_show_connect commands are used Arguments: NPC name or classname,
126.	ai_next_hull // Cycles through the various hull sizes. Currently selected hull size is written to the screen. Controls which connections are
127.	ai_nodes // Toggles node display. First call displays the nodes for the given network as green objects. Second call displays the nodes a
128.	ai_report_task_timings_on_limit "0"
129.	ai_resume // If NPC is stepping through tasks (see ai_step ) will resume normal processing.
130.	ai_setenabled // Like ai_disable but you manually specify the state (with a 0 or 1) instead of toggling it.
131.	ai_set_move_height_epsilon // Set how high AI bumps up ground walkers when checking steps
132.	ai_show_connect // Displays the allowed connections between each node for the currently selected hull type. Hulls are color code as follows: Gre
133.	ai_show_connect_crawl // Displays the allowed connections between each node for the currently selected hull type. Hulls are color code as follows: Gre
134.	ai_show_connect_fly // Displays the allowed connections between each node for the currently selected hull type. Hulls are color code as follows: Gre
135.	ai_show_connect_jump // Displays the allowed connections between each node for the currently selected hull type. Hulls are color code as follows: Gre
136.	ai_show_graph_connect // Toggles graph connection display for the node that the player is looking at. Nodes that are connected to the selected node by
137.	ai_show_grid // Draw a grid on the floor where looking.
138.	ai_show_hints // Displays all hints as small boxes Blue - hint is available for use Red - hint is currently being used by an NPC Orange -
139.	ai_show_hull // Displays the allowed hulls between each node for the currently selected hull type. Hulls are color code as follows: Green -
140.	ai_show_node // Highlight the specified node
141.	ai_show_visibility // Toggles visibility display for the node that the player is looking at. Nodes that are visible from the selected node will be d
142.	ai_step // use ai_step again. To resume processing no
143.	ai_test_los // Test AI LOS from the players POV
144.	ai_think_limit_label "0"
145.	ai_vehicle_avoidance "1"
146.	alias // Alias a command.
147.	ammo_338mag_max "30"
148.	ammo_357sig_max "52"
149.	ammo_357sig_min_max "12"
150.	ammo_357sig_small_max "24"
151.	ammo_45acp_max "100"
152.	ammo_50AE_max "35"
153.	ammo_556mm_box_max "200"
154.	ammo_556mm_max "90"
155.	ammo_556mm_small_max "40"
156.	ammo_57mm_max "100"
157.	ammo_762mm_max "90"
158.	ammo_9mm_max "120"
159.	ammo_buckshot_max "32"
160.	ammo_grenade_limit_default "1"
161.	ammo_grenade_limit_flashbang "1"
162.	ammo_grenade_limit_total "3"
163.	askconnect_accept // Accept a redirect request by the server.
164.	asw_engine_finished_building_map // Notify engine that weve finished building a map
165.	async_resume
166.	async_suspend
167.	audit_save_in_memory // Audit the memory usage and files in the save-to-memory system
168.	autobuy // Attempt to purchase items with the order listed in cl_autobuy
169.	autosave // Autosave
170.	autosavedangerous // AutoSaveDangerous
171.	autosavedangerousissafe
172.	banid // Add a user ID to the ban list.
173.	banip // Add an IP address to the ban list.
174.	benchframe // Takes a snapshot of a particular frame in a time demo.
175.	bench_end // Ends gathering of info.
176.	bench_showstatsdialog // Shows a dialog displaying the most recent benchmark results.
177.	bench_start // Starts gathering of info. Arguments: filename to write results into
178.	bench_upload // Uploads most recent benchmark stats to the Valve servers.
179.	bind // Bind a key.
180.	BindToggle // Performs a bind <key> increment var <cvar> 0 1 1
181.	bind_osx // Bind a key for OSX only.
182.	blackbox_dump // Dump the contents of the blackbox
183.	blackbox_record // Record an entry into the blackbox
184.	bot_add // bot_add <t|ct> <type> <difficulty> <name> - Adds a bot matching the given criteria.
185.	bot_add_ct // bot_add_ct <type> <difficulty> <name> - Adds a Counter-Terrorist bot matching the given criteria.
186.	bot_add_t // bot_add_t <type> <difficulty> <name> - Adds a terrorist bot matching the given criteria.
187.	bot_all_weapons // Allows the bots to use all weapons
188.	bot_autodifficulty_threshold_high "2" // Upper bound above Average Human Contribution Score that a bot must be above to change its difficulty
189.	bot_autodifficulty_threshold_low "-6" // Lower bound below Average Human Contribution Score that a bot must be below to change its difficulty
190.	bot_chatter "0" // or normal.
191.	bot_crouch "0"
192.	bot_debug "0" // For internal testing purposes.
193.	bot_debug_target "0" // For internal testing purposes.
194.	bot_defer_to_human_goals "0" // the bots will not do the scenario tasks.
195.	bot_defer_to_human_items "1" // the bots will not get scenario items.
196.	bot_difficulty "1" // 3=expert.
197.	bot_dont_shoot "0" // bots will not fire weapons (for debugging).
198.	bot_freeze "0"
199.	bot_goto_mark // Sends a bot to the marked nav area (useful for testing navigation meshes)
200.	bot_goto_selected // Sends a bot to the selected nav area (useful for testing navigation meshes)
201.	bot_join_after_player "1" // bots wait until a player joins before entering the game.
202.	bot_join_team "0" // or CT.
203.	bot_kick //
204.	bot_kill // matching the given criteria.
205.	bot_knives_only // Restricts the bots to only using knives
206.	bot_loadout "0" // bots are given these items at round start
207.	bot_mimic "0"
208.	bot_mimic_yaw_offset "180"
209.	bot_pistols_only // Restricts the bots to only using pistols
210.	bot_place // bot_place - Places a bot from the map at where the local player is pointing.
211.	bot_quota "10" // Determines the total number of bots in the game.
212.	bot_quota_mode "0" // Determines the type of quota. Allowed values: normal, fill, and match. If fill, the server will adjust bots to keep N p
213.	bot_randombuy "0" // should bots ignore their prefered weapons and just buy weapons at random?
214.	bot_show_battlefront "0" // Show areas where rushing players will initially meet.
215.	bot_show_nav "0" // For internal testing purposes.
216.	bot_show_occupy_time "0" // Show when each nav area can first be reached by each team.
217.	bot_snipers_only // Restricts the bots to only using sniper rifles
218.	bot_stop "0" // immediately stops all bot processing.
219.	bot_traceview "0" // For internal testing purposes.
220.	bot_zombie "0" // bots will stay in idle mode and not attack.
221.	box // Draw a debug box.
222.	buddha // Toggle. Player takes damage but wont die. (Shows red cross when health is zero)
223.	budget_averages_window "30" // number of frames to look at when figuring out average frametimes
224.	budget_background_alpha "128" // how translucent the budget panel is
225.	budget_bargraph_background_alpha "128" // how translucent the budget panel is
226.	budget_bargraph_range_ms "16" // budget bargraph range in milliseconds
227.	budget_history_numsamplesvisible "100" // number of samples to draw in the budget history window. The lower the better as far as rendering overhead of the budget panel
228.	budget_history_range_ms "66" // budget history range in milliseconds
229.	budget_panel_bottom_of_history_fraction "0" // number between 0 and 1
230.	budget_panel_height "384" // height in pixels of the budget panel
231.	budget_panel_width "512" // width in pixels of the budget panel
232.	budget_panel_x "0" // number of pixels from the left side of the game screen to draw the budget panel
233.	budget_panel_y "50" // number of pixels from the top side of the game screen to draw the budget panel
234.	budget_peaks_window "30" // number of frames to look at when figuring out peak frametimes
235.	budget_show_averages "0" // enable/disable averages in the budget panel
236.	budget_show_history "1" // turn history graph off and on. . good to turn off on low end
237.	budget_show_peaks "1" // enable/disable peaks in the budget panel
238.	budget_toggle_group // Turn a budget group on/off
239.	bug // Show the bug reporting UI.
240.	bugreporter_uploadasync "0" // Upload attachments asynchronously
241.	bugreporter_username "0" // Username to use for bugreporter
242.	bug_swap // Automatically swaps the current weapon for the bug bait and back again.
243.	buildcubemaps // Rebuild cubemaps.
244.	building_cubemaps "0" // Indicates were building cubemaps
245.	buildmodelforworld // buildmodelforworld
246.	buymenu // Show or hide main buy menu
247.	buyrandom // Buy random primary and secondary. Primarily for deathmatch where cost is not an issue.
248.	buy_stamps // Temporary solution for Pinion to kick back to community map makers.
249.	cache_print // cache_print [section] Print out contents of cache memory.
250.	cache_print_lru // cache_print_lru [section] Print out contents of cache memory.
251.	cache_print_summary // cache_print_summary [section] Print out a summary contents of cache memory.
252.	callvote // Start a vote on an issue.
253.	cam_collision "1" // an attempt is made to keep the camera from passing though walls.
254.	cam_command // Tells camera to change modes
255.	cam_idealdelta "4" // Controls the speed when matching offset to ideal angles in thirdperson view
256.	cam_idealdist "150"
257.	cam_idealdistright "0"
258.	cam_idealdistup "0"
259.	cam_ideallag "4" // Amount of lag used when matching offset to ideal angles in thirdperson view
260.	cam_idealpitch "0"
261.	cam_idealyaw "0"
262.	cam_showangles "0" // print viewangles/idealangles/cameraoffsets to the console.
263.	cam_snapto "0"
264.	cancelselect
265.	cash_player_bomb_defused "300"
266.	cash_player_bomb_planted "300"
267.	cash_player_damage_hostage "-30"
268.	cash_player_get_killed "0"
269.	cash_player_interact_with_hostage "150"
270.	cash_player_killed_enemy_default "300"
271.	cash_player_killed_enemy_factor "1"
272.	cash_player_killed_hostage "-1000"
273.	cash_player_killed_teammate "-3300"
274.	cash_player_rescued_hostage "1000"
275.	cash_player_respawn_amount "0"
276.	cash_team_elimination_bomb_map "3250"
277.	cash_team_elimination_hostage_map_ct "2000"
278.	cash_team_elimination_hostage_map_t "1000"
279.	cash_team_hostage_alive "0"
280.	cash_team_hostage_interaction "500"
281.	cash_team_loser_bonus "1400"
282.	cash_team_loser_bonus_consecutive_rounds "500"
283.	cash_team_planted_bomb_but_defused "800"
284.	cash_team_rescued_hostage "0"
285.	cash_team_terrorist_win_bomb "3500"
286.	cash_team_win_by_defusing_bomb "3250"
287.	cash_team_win_by_hostage_rescue "3500"
288.	cash_team_win_by_time_running_out_bomb "3250"
289.	cash_team_win_by_time_running_out_hostage "3250"
290.	cast_hull // Tests hull collision detection
291.	cast_ray // Tests collision detection
292.	cc_emit // Emits a closed caption
293.	cc_findsound // Searches for soundname which emits specified text.
294.	cc_flush // Flushes asyncd captions.
295.	cc_lang "0" // Current close caption language (emtpy = use game UI language)
296.	cc_linger_time "1" // Close caption linger time.
297.	cc_predisplay_time "0" // Close caption delay before showing caption.
298.	cc_random // Emits a random caption
299.	cc_showblocks // Toggles showing which blocks are pending/loaded async.
300.	cc_subtitles "0" // wont help hearing impaired players).
301.	centerview
302.	changelevel // Change server to the specified map
303.	changelevel2 // Transition to the specified map in single player
304.	chet_debug_idle "0" // many debug prints to help track down the TLK_IDLE issue. Set two for super verbose info
305.	ch_createairboat // Spawn airboat in front of the player.
306.	ch_createjeep // Spawn jeep in front of the player.
307.	clear // Clear all console output.
308.	clear_anim_cache // freeing the memory (until the next time a streaming animblock is requested).
309.	clear_debug_overlays // clears debug overlays
310.	clientport "27005" // Host game client port
311.	closecaption "0" // Enable close captioning.
312.	closeonbuy "0" // Set non-zero to close the buy menu after buying something
313.	cl_allowdownload "1" // Client downloads customization files
314.	cl_allowupload "1" // Client uploads customization files
315.	cl_animationinfo // Hud element to examine.
316.	cl_autobuy "0" // The order in which autobuy will attempt to purchase items
317.	cl_autohelp "0" // Auto-help
318.	cl_autowepswitch "1" // Automatically switch to picked up weapons (if more powerful)
319.	cl_backspeed "450"
320.	cl_bobamt_lat "0" // The amount the viewmodel moves side to side when running
321.	cl_bobamt_vert "0" // The amount the viewmodel moves up and down when running
322.	cl_bobcycle "0" // the frequency at which the viewmodel bobs.
323.	cl_bobup "0"
324.	cl_bob_lower_amt "21" // The amount the viewmodel lowers when running
325.	cl_bob_version "0"
326.	cl_brushfastpath "1"
327.	cl_buy_favorite // Purchase a favorite weapon/equipment loadout
328.	cl_buy_favorite_nowarn "0" // Skips the error prompt when saving an invalid buy favorite
329.	cl_buy_favorite_quiet "0" // Skips the prompt when saving a buy favorite in the buy menu
330.	cl_buy_favorite_reset // Reset favorite loadouts to the default
331.	cl_buy_favorite_set // Saves the current loadout as a favorite
332.	cl_camera_follow_bone_index "-2" // Index of the bone to follow. -2 == disabled. -1 == root bone. 0+ is bone index.
333.	cl_chatfilters "63" // Stores the chat filter settings
334.	cl_class "0" // Default class when joining a game
335.	cl_clearhinthistory // Clear memory of client side hints displayed to the player.
336.	cl_clockdrift_max_ms "150" // Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the servers.
337.	cl_clockdrift_max_ms_threadmode "0" // Maximum number of milliseconds the clock is allowed to drift before the client snaps its clock to the servers.
338.	cl_clock_correction "1" // Enable/disable clock correction on the client.
339.	cl_clock_correction_adjustment_max_amount "200" // Sets the maximum number of milliseconds per second it is allowed to correct the client clock. It will only correct this amount
340.	cl_clock_correction_adjustment_max_offset "90" // it moves towards apply
341.	cl_clock_correction_adjustment_min_offset "10" // then no clock correction is applied.
342.	cl_clock_correction_force_server_tick "999" // Force clock correction to match the server tick + this offset (-999 disables it).
343.	cl_clock_showdebuginfo "0" // Show debugging info about the clock drift.
344.	cl_cmdrate "128" // Max number of command packets sent to server per second
345.	cl_cmm_showteamplayercolors "1" // etc.
346.	cl_cmm_teamplayercolors_showletters "0" // this will show letters over the colors.
347.	cl_crosshairalpha "200"
348.	cl_crosshaircolor "1" // Set crosshair color as defined in game_options.consoles.txt
349.	cl_crosshaircolor_b "50"
350.	cl_crosshaircolor_g "250"
351.	cl_crosshaircolor_r "50"
352.	cl_crosshairdot "0"
353.	cl_crosshairgap "0"
354.	cl_crosshairscale "0" // Crosshair scaling factor (deprecated)
355.	cl_crosshairsize "5"
356.	cl_crosshairstyle "1"
357.	cl_crosshairthickness "0"
358.	cl_crosshairusealpha "1"
359.	cl_crosshair_drawoutline "0" // Draws a black outline around the crosshair for better visibility
360.	cl_crosshair_dynamic_maxdist_splitratio "0" // this is the ratio used to determine how long the inner and outer xhair pips will be. [inner = cl_ 361.	cl_crosshair_dynamic_splitalpha_innermod "1" // this is the alpha modification that will be used for the INNER crosshair pips once theyve split. 362. cl_crosshair_dynamic_splitalpha_outermod "0" // this is the alpha modification that will be used for the OUTER crosshair pips once theyve split. 363.	cl_crosshair_dynamic_splitdist "7" // this is the distance that the crosshair pips will split into 2. (default is 7) 364.	cl_crosshair_outlinethickness "1" // Set how thick you want your crosshair outline to draw (0.1-3) 365.	cl_csm_server_status // Usage: cl_csm_server_status 366.	cl_csm_status // Usage: cl_csm_status 367. cl_cs_dump_econ_item_stringtable // cl_cs_dump_econ_item_stringtable 368. cl_custommaterial_debug_graph "0" 369.	cl_debugrumble "0" // Turn on rumble debugging spew 370.	cl_debug_ugc_downloads "1" 371.	cl_decryptdata_key "0" // Key to decrypt encrypted GOTV messages 372.	cl_decryptdata_key_pub "0" // Key to decrypt public encrypted GOTV messages 373. cl_detail_avoid_force "0" // percentage of the width of the detail sprite ) 374.	cl_detail_avoid_radius "64" // radius around detail sprite to avoid players 375.	cl_detail_avoid_recover_speed "0" // how fast to recover position after avoiding players 376.	cl_detail_max_sway "5" // Amplitude of the detail prop sway 377.	cl_detail_multiplier "1" // extra details to create 378.	cl_disablefreezecam "0" // Turn on/off freezecam on client 379.	cl_disablehtmlmotd "0" // Disable HTML motds. 380.	cl_disable_ragdolls "0" 381.	cl_dm_buyrandomweapons "1" // they will receive the 382.	cl_downloadfilter "0" // nosounds) 383.	cl_download_demoplayer "1" // 2:all) 384.	cl_drawhud "1" // Enable the rendering of the hud 385.	cl_drawleaf "-1" 386.	cl_drawmaterial "0" // Draw a particular material over the frame 387. cl_drawshadowtexture "0" 388.	cl_draw_only_deathnotices "0" // For drawing only the crosshair and death notices (used for moviemaking) 389.	cl_dumpplayer // Dumps info about a player 390. cl_dumpsplithacks // Dump split screen workarounds. 391.	cl_dump_particle_stats // dump particle profiling info to particle_profile.csv 392.	cl_entityreport "0" // draw entity states to console 393. cl_ent_absbox // Displays the clients absbox for the entity under the crosshair. 394.	cl_ent_bbox // Displays the clients bounding box for the entity under the crosshair. 395.	cl_ent_rbox // Displays the clients render box for the entity under the crosshair. 396.	cl_extrapolate "1" // Enable/disable extrapolation if interpolation history runs out. 397.	cl_extrapolate_amount "0" // Set how many seconds the client will extrapolate entities for. 398.	cl_fastdetailsprites "1" // whether to use new detail sprite system 399.	cl_find_ent // Find and list all client entities with classnames that contain the specified substring. Format: cl_find_ent <substring> 400.	cl_find_ent_index // Display data for clientside entity matching specified index. Format: cl_find_ent_index <index> 401. cl_fixedcrosshairgap "3" // How big to make the gap between the pips in the fixed crosshair 402. cl_flushentitypacket "0" // For debugging. Force the engine to flush an entity packet. 403. cl_forcepreload "0" // Whether we should force preloading. 404.	cl_forwardspeed "450" 405. cl_freezecameffects_showholiday "0" // Happy holidays from the CS:GO team and Valve! 406. cl_freezecampanel_position_dynamic "1" // Turn on/off freezecams kill panel dynamic Y movement 407.	cl_fullupdate // Forces the server to send a full update packet 408.	cl_game_mode_convars // Display the values of the convars for the current game_mode. 409.	cl_idealpitchscale "0" 410. cl_ignorepackets "0" // Force client to ignore packets (for debugging). 411.	cl_interp "0" // Sets the interpolation amount (bounded on low side by server interp ratio settings). 412.	cl_interpolate "1" // Enables or disables interpolation on listen servers or during demo playback 413.	cl_interp_ratio "2" // Sets the interpolation amount (final amount is cl_interp_ratio / cl_updaterate). 414. cl_inv_showdividerline "0" // will show a divider line above the grenades in the inventory panel. 415. cl_jiggle_bone_debug "0" // Display physics-based jiggle bone debugging information 416. cl_jiggle_bone_debug_pitch_constraints "0" // Display physics-based jiggle bone debugging information 417.	cl_jiggle_bone_debug_yaw_constraints "0" // Display physics-based jiggle bone debugging information 418.	cl_jiggle_bone_invert "0" 419.	cl_lagcompensation "1" // Perform server side lag compensation of weapon firing events. 420.	cl_language "0" // Language (from Steam API) 421.	cl_leafsystemvis "0" 422.	cl_leveloverview "0" 423.	cl_leveloverviewmarker "0" 424. cl_loadout_colorweaponnames "0" // the weapon names are colored in the weapon loadout to match their rarity. 425.	cl_logofile "0" // Spraypoint logo decal. 426.	cl_mainmenu_show_datagraph "0" 427. cl_maxrenderable_dist "3000" // Max distance from the camera at which things will be rendered 428. cl_minimal_rtt_shadows "1" 429.	cl_modemanager_reload // Reloads the panel metaclasses for vgui screens. 430.	cl_mouseenable "0" 431.	cl_mouselook "1" // 0 for keyboard look. Cannot be set while connected to a server. 432.	cl_observercrosshair "1" 433.	cl_overdraw_test "0" 434. cl_panelanimation // Shows panel animation variables: <panelname | blank for all panels>. 435. cl_particles_dumplist // optional name substring. 436.	cl_particles_dump_effects 437. cl_particles_show_bbox "0" 438.	cl_particles_show_controlpoints "0" 439.	cl_particle_retire_cost "0" 440.	cl_pclass "0" // Dump entity by prediction classname. 441.	cl_pdump "-1" // Dump info about this entity to screen. 442.	cl_phys_show_active "0" 443.	cl_phys_timescale "1" // Sets the scale of time for client-side physics (ragdolls) 444.	cl_pitchdown "89" 445.	cl_pitchup "89" 446. cl_portal_use_new_dissolve "1" // Use new dissolve effect 447.	cl_precacheinfo // Show precache info (client).
448.	cl_predict "1" // Perform client side prediction.
449.	cl_predictioncopy_describe // Describe datamap_t for entindex
450.	cl_predictionlist "0" // Show which entities are predicting
451.	cl_predictweapons "1" // Perform client side prediction of weapon effects.
452.	cl_pred_track // for field fieldname.
453.	cl_radar_always_centered "1" // even at map extents.
454.	cl_radar_icon_scale_min "0" // Sets the minimum icon scale. Valid values are 0.4 to 1.0.
455.	cl_radar_rotate "1" // 1
456.	cl_radar_scale "0" // Sets the radar scale. Valid values are 0.25 to 1.0.
457.	cl_ragdoll_gravity "600" // Sets the gravity client-side ragdolls
458.	cl_rebuy "0" // The order in which rebuy will attempt to repurchase items
459.	cl_reloadpostprocessparams
460.	cl_removedecals // Remove the decals from the entity under the crosshair.
461.	cl_remove_all_workshop_maps // Removes all maps from the workshop directory.
462.	cl_remove_old_ugc_downloads "1"
463.	cl_report_soundpatch // reports client-side sound patch count
464.	cl_resend "6" // Delay in seconds before the client will resend the connect attempt
465.	cl_resend_timeout "60" // Total time allowed for the client to resend the connect attempt
466.	cl_righthand "1" // Use right-handed view models.
467.	cl_rumblescale "1" // Scale sensitivity of rumble effects (0 to 1.0)
468.	cl_saveweaponcustomtextures // Save custom textures of current weapon.
469.	cl_scalecrosshair "1" // Enable crosshair scaling (deprecated)
470.	cl_shadowtextureoverlaysize "256"
471.	cl_showanimstate_activities "0" // Show activities in the (client) animation state display.
472.	cl_showents // Dump entity list to console.
473.	cl_showerror "0" // 2 for above plus detailed field deltas.
474.	cl_showevents "0" // Print event firing info in the console
475.	cl_showfps "0" // 5 = Thread and wait times +10 = detailed )
476.	cl_showhelp "1" // Set to 0 to not show on-screen help
477.	cl_showloadout "1" // Toggles display of current loadout.
478.	cl_showpluginmessages "1" // Allow plugins to display messages to you
479.	cl_showpos "0" // Draw current position at top of screen
480.	cl_show_clan_in_death_notice "1" // the clan name will show next to player names in the death notices.
481.	cl_sidespeed "450"
482.	cl_skipfastpath "0" // Set to 1 to stop all models that go through the model fast path from rendering
483.	cl_skipslowpath "0" // Set to 1 to skip any models that dont go through the model fast path
484.	cl_sos_test_get_opvar
485.	cl_sos_test_set_opvar
486.	cl_soundemitter_flush // Flushes the sounds.txt system (server only)
487.	cl_soundemitter_reload // Flushes the sounds.txt system
488.	cl_soundfile "0" // Jingle sound file.
489.	cl_soundscape_flush // Flushes the client side soundscapes
490.	cl_soundscape_printdebuginfo // print soundscapes
491.	cl_spec_mode "5" // Saves the last viewed spectator mode for use next time we start to spectate
492.	cl_spec_show_bindings "1" // Toggle the visibility of the spectator bindings.
493.	cl_spec_stats "1"
494.	cl_sporeclipdistance "512"
495.	cl_ss_origin // print origin in script format
496.	cl_steamscreenshots // Enable/disable saving screenshots to Steam
497.	cl_sunlight_ortho_size "0" // Set to values greater than 0 for ortho view render projections.
498.	cl_sun_decay_rate "0"
499.	cl_team "0" // Default team when joining a game
500.	cl_teamid_overhead "1" // 1 = on
501.	cl_teamid_overhead_maxdist "3000" // max distance at which the overhead team id icons will show
502.	cl_teamid_overhead_maxdist_spec "2000" // max distance at which the overhead team id icons will show when a spectator
503.	cl_teamid_overhead_name_alpha "240" // The max alpha the overhead ID names will draw as.
504.	cl_teamid_overhead_name_fadetime "0" // How long it takes for the overhad name to fade out once your crosshair has left the target.
505.	cl_timeout "30" // the client will disconnect itself
506.	cl_tree_sway_dir // sets tree sway wind direction and strength
507.	cl_updaterate "64" // Number of packets per second of updates you are requesting from the server
508.	cl_updatevisibility // Updates visibility bits.
509.	cl_upspeed "320"
510.	cl_use_new_headbob "1"
511.	cl_use_opens_buy_menu "1" // Pressing the +use key will open the buy menu if in a buy zone (just as if you pressed the buy key).
512.	cl_view // Set the view entity index.
513.	cl_viewmodel_shift_left_amt "1" // The amount the viewmodel shifts to the left when shooting accuracy increases.
514.	cl_viewmodel_shift_right_amt "0" // The amount the viewmodel shifts to the right when shooting accuracy decreases.
515.	cl_winddir "0" // Weather effects wind direction angle
516.	cl_windspeed "0" // Weather effects wind speed scalar
517.	cl_wpn_sway_scale "1"
518.	cmd // Forward command to server.
519.	cmd1 // sets userinfo string for split screen player in slot 1
520.	cmd2 // sets userinfo string for split screen player in slot 2
521.	cmd3 // sets userinfo string for split screen player in slot 3
522.	cmd4 // sets userinfo string for split screen player in slot 4
523.	collision_test // Tests collision system
524.	colorcorrectionui // Show/hide the color correction tools UI.
525.	commentary_cvarsnotchanging
526.	commentary_finishnode
527.	commentary_firstrun "0"
528.	commentary_showmodelviewer // Display the commentary model viewer. Usage: commentary_showmodelviewer <model name> <optional attached model name>
529.	commentary_testfirstrun
530.	computer_name // Spew computer name
531.	condump // dump the text currently in the console to condumpXX.log
532.	connect // Connect to specified server.
533.	con_enable "0" // Allows the console to be activated.
534.	con_filter_enable "0" // 2 displays filtered text brighter than ot
535.	con_filter_text "0" // Text with which to filter console spew. Set con_filter_enable 1 or 2 to activate.
536.	con_filter_text_out "0" // Text with which to filter OUT of console spew. Set con_filter_enable 1 or 2 to activate.
537.	con_logfile "0" // Console output gets written to this file
538.	con_min_severity // LS_ERROR=3.
539.	crash // Cause the engine to crash (Debug!!)
540.	CreatePredictionError // Create a prediction error
541.	create_flashlight
542.	creditsdone
543.	crosshair "1"
544.	csgo_download_match // Downloads a match via serial code and starts playback
545.	cs_enable_player_physics_box "0"
546.	cs_hostage_near_rescue_music_distance "2000"
547.	cs_make_vip // Marks a player as the VIP
548.	cs_ShowStateTransitions "-2" // cs_ShowStateTransitions <ent index or -1 for all>. Show player state transitions.
549.	CS_WarnFriendlyDamageInterval "3" // Defines how frequently the server notifies clients that a player damaged a friend
550.	cursortimeout "60" // Seconds before mouse cursor hides itself due to inactivity
551.	custom_bot_difficulty "0" // Bot difficulty for offline play.
552.	cvarlist // Show the list of convars/concommands.
553.	c_maxdistance "200"
554.	c_maxpitch "90"
555.	c_maxyaw "135"
556.	c_mindistance "30"
557.	c_minpitch "0"
558.	c_minyaw "-135"
559.	c_orthoheight "100"
560.	c_orthowidth "100"
561.	c_thirdpersonshoulder "0"
562.	c_thirdpersonshoulderaimdist "120"
563.	c_thirdpersonshoulderdist "40"
564.	c_thirdpersonshoulderheight "5"
565.	c_thirdpersonshoulderoffset "20"
566.	dbghist_addline // Add a line to the debug history. Format: <category id> <line>
567.	dbghist_dump // Dump the debug history to the console. Format: <category id> Categories: 0: Entity I/O 1: AI Decisions 2: Sc
568.	debugsystemui // Show/hide the debug system UI.
569.	debug_map_crc "0" // Prints CRC for each map lump loaded
570.	debug_visibility_monitor "0"
571.	default_fov "90"
572.	demolist // Print demo sequence list.
573.	demos // Demo demo file sequence.
574.	demoui // Show/hide the demo player UI.
575.	demo_gototick // Skips to a tick in demo.
576.	demo_listhighlights // List all highlights data for the demo.
577.	demo_listimportantticks // List all important ticks in the demo.
578.	demo_pause // Pauses demo playback.
579.	demo_recordcommands "1" // Record commands typed at console into .dem files.
580.	demo_resume // Resumes demo playback.
581.	demo_timescale // Sets demo replay speed.
582.	demo_togglepause // Toggles demo playback.
583.	developer "0" // Set developer message level
584.	devshots_nextmap // Used by the devshots system to go to the next map in the devshots maplist.
585.	devshots_screenshot // use the screenshot command instead.
586.	differences // Show all convars which are not at their default values.
587.	disable_static_prop_loading "0" // static props wont be loaded
588.	disconnect // Disconnect game from server.
589.	display_elapsedtime // Displays how much time has elapsed since the game started
590.	display_game_events "0"
591.	disp_list_all_collideable // List all collideable displacements
592.	dlight_debug // Creates a dlight in front of the player
593.	dm_reset_spawns
594.	dm_togglerandomweapons // Turns random weapons in deathmatch on/off
595.	drawcross // Draws a cross at the given location Arguments: x y z
596.	drawline // Draws line between two 3D Points. Green if no collision Red is collides with something Arguments: x1 y1 z1 x2 y2 z2
597.	drawoverviewmap // Draws the overview map
598.	drawradar // Draws HUD radar
599.	dsp_db_min "80"
600.	dsp_db_mixdrop "0"
601.	dsp_dist_max "1440"
602.	dsp_dist_min "0"
603.	dsp_enhance_stereo "1"
604.	dsp_mix_max "0"
605.	dsp_mix_min "0"
606.	dsp_off "0"
607.	dsp_player "0"
608.	dsp_reload
609.	dsp_slow_cpu "0"
610.	dsp_volume "0"
611.	ds_get_newest_subscribed_files // Re-reads web api auth key and subscribed file lists from disk and downloads the latest updates of those files from steam
612.	dti_flush // Write out the datatable instrumentation files (you must run with -dti for this to work).
613.	dumpentityfactories // Lists all entity factory names.
614.	dumpeventqueue // Dump the contents of the Entity I/O event queue to the console.
615.	dumpgamestringtable // Dump the contents of the game string table to the console.
616.	dumpstringtables // Print string tables to console.
617.	dump_entity_sizes // Print sizeof(entclass)
618.	dump_globals // Dump all global entities/states
619.	dump_particlemanifest // Dump the list of particles loaded.
620.	echo // Echo text to console.
621.	econ_build_pinboard_images_from_collection_name // Renders and saves images for all models in a collection.
622.	econ_clear_inventory_images // clear the local inventory images (they will regenerate)
623.	econ_highest_baseitem_seen "62"
624.	econ_show_items_with_tag // Lists the item definitions that have a specified tag.
625.	editdemo // Edit a recorded demo file (.dem ).
626.	editor_toggle // Disables the simulation and returns focus to the editor
627.	enable_debug_overlays "1" // Enable rendering of debug overlays
628.	enable_skeleton_draw "0" // Render skeletons in wireframe
629.	endmatch_votenextmap // Votes for the next map at the end of the match
630.	endmovie // Stop recording movie frames.
631.	endround // End the current round.
632.	english "0" // running the english language set of assets.
633.	ent_absbox // Displays the total bounding box for the given entity(s) in green. Some entites will also display entity specific overlays. Ar
634.	ent_attachments // Displays the attachment points on an entity. Arguments: {entity_name} / {class_name} / no argument picks what player is loo
635.	ent_autoaim // Displays the entitys autoaim radius. Arguments: {entity_name} / {class_name} / no argument picks what player is looking at
636.	ent_bbox // Displays the movement bounding box for the given entity(ies) in orange. Some entites will also display entity specific overlay
637.	ent_cancelpendingentfires // Cancels all ent_fire created outputs that are currently waiting for their delay to expire.
638.	ent_create // Creates an entity of the given type where the player is looking.
639.	ent_dump // Usage: ent_dump <entity name>
640.	ent_fire // Usage: ent_fire <target> [action] [value] [delay]
641.	ent_info // Usage: ent_info <class name>
642.	ent_keyvalue // Applies the comma delimited key=value pairs to the entity with the given Hammer ID. Format: ent_keyvalue <entity id> <key1>=<v
643.	ent_messages // Toggles input/output message display for the selected entity(ies). The name of the entity will be displayed as well as any mes
644.	ent_messages_draw "0" // Visualizes all entity input/output activity.
645.	ent_name
646.	ent_orient // only orients target entitys YAW. Use the allangles opt
647.	ent_pause // Toggles pausing of input/output message processing for entities. When turned on processing of all message will stop. Any mess
648.	ent_pivot // Displays the pivot for the given entity(ies). (y=up=green, z=forward=blue, x=left=red). Arguments: {entity_name} / {class
649.	ent_rbox // Displays the total bounding box for the given entity(s) in green. Some entites will also display entity specific overlays. Ar
650.	ent_remove // Removes the given entity(s) Arguments: {entity_name} / {class_name} / no argument picks what player is looking at
651.	ent_remove_all // Removes all entities of the specified type Arguments: {entity_name} / {class_name}
652.	ent_rotate // Rotates an entity by a specified # of degrees
653.	ent_script_dump // Dumps the names and values of this entitys script scope to the console Arguments: {entity_name} / {class_name} / no argume
654.	ent_setang // Set entity angles
655.	ent_setname // Sets the targetname of the given entity(s) Arguments: {new entity name} {entity_name} / {class_name} / no argument picks wh
656.	ent_setpos // Move entity to position
657.	ent_show_response_criteria // an entitys current criteria set used to select responses. Arguments: {entity_name} / {class_name} /
658.	ent_step // When ent_pause is set this will step through one waiting input / output message at a time.
659.	ent_teleport // Teleport the specified entity to where the player is looking. Format: ent_teleport <entity name>
660.	ent_text // Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text) Arguments: {entity_
661.	ent_viewoffset // Displays the eye position for the given entity(ies) in red. Arguments: {entity_name} / {class_name} / no argument picks wha
662.	envmap
663.	escape // Escape key pressed.
664.	exec // Execute script file.
665.	execifexists // Execute script file if file exists.
666.	execwithwhitelist // only execing convars on a whitelist.
667.	exit // Exit the engine.
668.	explode // Kills the player with explosive damage
669.	explodevector // Kills a player applying an explosive force. Usage: explodevector <player> <x value> <y value> <z value>
670.	fadein // fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds.
671.	fadeout // fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds.
672.	ff_damage_reduction_bullets "0" // How much to reduce damage done to teammates when shot. Range is from 0 - 1 (with 1 being damage equal to what is done to an en
673.	ff_damage_reduction_grenade "0" // How much to reduce damage done to teammates by a thrown grenade. Range is from 0 - 1 (with 1 being damage equal to what is don
674.	ff_damage_reduction_grenade_self "1" // How much to damage a player does to himself with his own grenade. Range is from 0 - 1 (with 1 being damage equal to what is do
675.	ff_damage_reduction_other "0" // How much to reduce damage done to teammates by things other than bullets and grenades. Range is from 0 - 1 (with 1 being damag
676.	find // Find concommands with the specified string in their name/help text.
677.	findflags // Find concommands by flags.
678.	find_ent // Find and list all entities with classnames or targetnames that contain the specified substring. Format: find_ent <substring>
679.	find_ent_index // Display data for entity matching specified index. Format: find_ent_index <index>
680.	firetarget
681.	firstperson // Switch to firstperson camera.
682.	fish_debug "0" // Show debug info for fish
683.	fish_dormant "0" // Turns off interactive fish behavior. Fish become immobile and unresponsive.
684.	flush // Flush unlocked cache memory.
685.	flush_locked // Flush unlocked and locked cache memory.
686.	fogui // Show/hide fog control UI.
687.	fog_color "-1"
688.	fog_colorskybox "-1"
689.	fog_enable "1"
690.	fog_enableskybox "1"
691.	fog_enable_water_fog "1"
692.	fog_end "-1"
693.	fog_endskybox "-1"
694.	fog_hdrcolorscale "-1"
695.	fog_hdrcolorscaleskybox "-1"
696.	fog_maxdensity "-1"
697.	fog_maxdensityskybox "-1"
698.	fog_override "0" // Overrides the maps fog settings (-1 populates fog_ vars with maps values)
699.	fog_start "-1"
700.	fog_startskybox "-1"
701.	forcebind // Bind a command to an available key. (forcebind command opt:suggestedKey)
702.	force_audio_english "0" // Keeps track of whether were forcing english in a localized language.
703.	force_centerview
704.	foundry_engine_get_mouse_control // Give the engine control of the mouse.
705.	foundry_engine_release_mouse_control // Give the control of the mouse back to Hammer.
706.	foundry_select_entity // Select the entity under the crosshair or select entities with the specified name.
707.	foundry_sync_hammer_view // Move Hammers 3D view to the same position as the engines 3D view.
708.	foundry_update_entity // Updates the entitys position/angles when in edit mode
709.	fov_cs_debug "0" // Sets the view fov if cheats are on.
710.	fps_max "300" // Frame rate limiter
711.	fps_max_menu "120" // main menu
712.	fps_screenshot_frequency "10" // While the fps is below the threshold we will dump a screen shot this often in seconds (i.e. 10 = screen shot every 10 seconds w
713.	fps_screenshot_threshold "-1" // Dump a screenshot when the FPS drops below the given value.
714.	fs_clear_open_duplicate_times // Clear the list of files that have been opened.
715.	fs_dump_open_duplicate_times // Set fs_report_long_reads 1 before loading to use this. Prints a list of files that were opened more than once and ~how long was
716.	fs_fios_cancel_prefetches // Cancels all the prefetches in progress.
717.	fs_fios_flush_cache // Flushes the FIOS HDD cache.
718.	fs_fios_prefetch_file // Prefetches a file: </PS3_GAME/USRDIR/filename.bin>. The preftech is medium priority and persistent.
719.	fs_fios_prefetch_file_in_pack // Prefetches a file in a pack: <portal2/models/container_ride/fineDebris_part5.ani>. The preftech is medium priority and non-pers
720.	fs_fios_print_prefetches // Displays all the prefetches currently in progress.
721.	fs_printopenfiles // Show all files currently opened by the engine.
722.	fs_syncdvddevcache // Force the 360 to get updated files that are in your p4 changelist(s) from the host PC when running with -dvddev.
723.	fs_warning_level // Set the filesystem warning level.
724.	func_break_max_pieces "15"
725.	fx_new_sparks "1" // Use new style sparks.
726.	g15_dumpplayer // Spew player data.
727.	g15_reload // Reloads the Logitech G-15 Keyboard configs.
728.	g15_update_msec "250" // Logitech G-15 Keyboard update interval.
729.	gameinstructor_dump_open_lessons // Gives a list of all currently open lessons.
730.	gameinstructor_enable "1" // Display in game lessons that teach new players.
731.	gameinstructor_find_errors "0" // Set to 1 and the game instructor will run EVERY scripted command to uncover errors.
732.	gameinstructor_reload_lessons // Shuts down all open lessons and reloads them from the script file.
733.	gameinstructor_reset_counts // Resets all display and success counts to zero.
734.	gameinstructor_save_restore_lessons "1" // Set to 0 to disable save/load of open lesson opportunities in single player.
735.	gameinstructor_verbose "0" // Set to 1 for standard debugging or 2 (in combo with gameinstructor_verbose_lesson) to show update actions.
736.	gameinstructor_verbose_lesson "0" // Display more verbose information for lessons have this name.
737.	gamemenucommand // Issue game menu command.
738.	gamepadslot1
739.	gamepadslot2
740.	gamepadslot3
741.	gamepadslot4
742.	gamepadslot5
743.	gamepadslot6
744.	gameui_activate // Shows the game UI
745.	gameui_allowescape // Escape key allowed to hide game UI
746.	gameui_allowescapetoshow // Escape key allowed to show game UI
747.	gameui_hide // Hides the game UI
748.	gameui_preventescape // Escape key doesnt hide game UI
749.	gameui_preventescapetoshow // Escape key doesnt show game UI
750.	game_mode "0" // The current game mode (based on game type). See GameModes.txt.
751.	game_type "0" // The current game type. See GameModes.txt.
752.	getpos // dump position and angles to the console
753.	getpos_exact // dump origin and angles to the console
754.	give // Give item to player. Arguments: <item_name>
755.	givecurrentammo // Give a supply of ammo for current weapon..
756.	global_event_log_enabled "0" // Enables the global event log system
757.	global_set // 2 = DEAD).
758.	glow_outline_effect_enable "1" // Enable entity outline glow effects.
759.	glow_outline_width "6" // Width of glow outline effect in screen space.
760.	gl_clear_randomcolor "0" // Clear the back buffer to random colors every frame. Helps spot open seams in geometry.
761.	god // Toggle. Player becomes invulnerable.
762.	gods // Toggle. All players become invulnerable.
763.	gotv_theater_container "0" // setting it to live will play top live matches
764.	groundlist // Display ground entity list <index>
765.	g_debug_angularsensor "0"
766.	g_debug_constraint_sounds "0" // Enable debug printing about constraint sounds.
767.	g_debug_ragdoll_removal "0"
768.	g_debug_ragdoll_visualize "0"
769.	g_debug_trackpather "0"
770.	g_debug_vehiclebase "0"
771.	g_debug_vehicledriver "0"
772.	g_debug_vehicleexit "0"
773.	g_debug_vehiclesound "0"
774.	g_jeepexitspeed "100"
775.	hammer_update_entity // Updates the entitys position/angles when in edit mode
776.	hammer_update_safe_entities // Updates entities in the map that can safely be updated (dont have parents or are affected by constraints). Also excludes entit
777.	heartbeat // Force heartbeat of master servers
778.	help // Find help about a convar/concommand.
779.	hideconsole // Hide the console.
780.	hidehud "0"
781.	hideoverviewmap // Hides the overview map
782.	hidepanel // Hides a viewport panel <name>
783.	hideradar // Hides HUD radar
784.	hidescores // Forcibly hide score panel
785.	hostage_debug "0" // Show hostage AI debug information
786.	hostfile "0" // The HOST file to load.
787.	hostip "-1062686208.000" // Host game server ip
788.	hostname "0" // Hostname for server.
789.	hostport "27015" // Host game server port
790.	host_filtered_time_report // Dumps time spent idle in previous frames in ms(dedicated only).
791.	host_flush_threshold "12" // Memory threshold below which the host should flush caches between server instances
792.	host_map "0" // Current map name.
793.	host_reset_config // reset config (for testing) with param as splitscreen index.
794.	host_runofftime // Run off some time without rendering/updating sounds
795.	host_sleep "0" // Force the host to sleep a certain number of milliseconds each frame.
796.	host_timer_report // Spew CPU timer jitter for the last 128 frames in microseconds (dedicated only)
797.	host_timescale "1" // Prescale the clock by this amount.
798.	host_workshop_collection // Get the latest version of maps in a workshop collection and host them as a maplist.
799.	host_workshop_map // Get the latest version of the map and host it on this server.
800.	host_writeconfig // Store current settings to config.cfg (or specified .cfg file).
801.	host_writeconfig_ss // Store current settings to config.cfg (or specified .cfg file) ) with first param as splitscreen index.
802.	hud_reloadscheme // Reloads hud layout and animation scripts.
803.	hud_scaling "0" // Scales hud elements
804.	hud_showtargetid "1" // Enables display of target names
805.	hud_subtitles // Plays the Subtitles: <filename>
806.	hud_takesshots "0" // Auto-save a scoreboard screenshot at the end of a map.
807.	hunk_print_allocations
808.	hunk_track_allocation_types "1"
809.	hurtme // Hurts the player. Arguments: <health to lose>
810.	impulse
811.	incrementvar // Increment specified convar value.
812.	inferno_child_spawn_interval_multiplier "0" // Amount spawn interval increases for each child
813.	inferno_child_spawn_max_depth "4"
814.	inferno_damage "40" // Damage per second
815.	inferno_debug "0"
816.	inferno_dlight_spacing "200" // Inferno dlights are at least this far apart
817.	inferno_flame_lifetime "7" // Average lifetime of each flame in seconds
818.	inferno_flame_spacing "42" // Minimum distance between separate flame spawns
819.	inferno_forward_reduction_factor "0"
820.	inferno_friendly_fire_duration "6" // FF is credited back to the thrower.
821.	inferno_initial_spawn_interval "0" // Time between spawning flames for first fire
822.	inferno_max_child_spawn_interval "0" // Largest time interval for child flame spawning
823.	inferno_max_flames "16" // Maximum number of flames that can be created
824.	inferno_max_range "150" // Maximum distance flames can spread from their initial ignition point
825.	inferno_per_flame_spawn_duration "3" // Duration each new flame will attempt to spawn new flames
826.	inferno_scorch_decals "1"
827.	inferno_spawn_angle "45" // Angular change from parent
828.	inferno_surface_offset "20"
829.	inferno_velocity_decay_factor "0"
830.	inferno_velocity_factor "0"
831.	inferno_velocity_normal_factor "0"
832.	invnext
833.	invnextgrenade
834.	invnextitem
835.	invnextnongrenade
836.	invprev
837.	in_forceuser "0" // Force user input to this split screen player.
838.	ip "0" // Overrides IP for multihomed hosts
839.	ipc_console_disable // Disable IPC console(s)
840.	ipc_console_disable_all // Disable all IPC consoles
841.	ipc_console_enable // Enable IPC console
842.	ipc_console_show // Show status of IPC consoles
843.	joinsplitscreen // join split screen
844.	joyadvancedupdate
845.	joystick "0" // false otherwise.
846.	joystick_force_disabled "0" // Prevents any and all joystick input for cases where a piece of hardware is incorrectly identified as a joystick an sends bad si
847.	joystick_force_disabled_set "0" // Sets controllers enabled/disabled just before the config is written.
848.	joy_accelmax "1"
849.	joy_accelscale "3"
850.	joy_accelscalepoly "0"
851.	joy_advanced "0"
852.	joy_advaxisr "0"
853.	joy_advaxisu "0"
854.	joy_advaxisv "0"
855.	joy_advaxisx "0"
856.	joy_advaxisy "0"
857.	joy_advaxisz "0"
858.	joy_autoaimdampen "0" // How much to scale user stick input when the gun is pointing at a valid target.
859.	joy_autoAimDampenMethod "0"
860.	joy_autoaimdampenrange "0" // The stick range where autoaim dampening is applied. 0 = off
861.	joy_axisbutton_threshold "0" // Analog axis range before a button press is registered.
862.	joy_cfg_preset "1"
863.	joy_circle_correct "1"
864.	joy_curvepoint_1 "0"
865.	joy_curvepoint_2 "0"
866.	joy_curvepoint_3 "0"
867.	joy_curvepoint_4 "1"
868.	joy_curvepoint_end "2"
869.	joy_diagonalpov "0" // too.
870.	joy_display_input "0"
871.	joy_forwardsensitivity "-1"
872.	joy_forwardthreshold "0"
873.	joy_gamma "0"
874.	joy_inverty "0" // Whether to invert the Y axis of the joystick for looking.
875.	joy_lowend "1"
876.	joy_lowend_linear "0"
877.	joy_lowmap "1"
878.	joy_movement_stick "0" // 2 = legacy controls
879.	joy_name "0"
880.	joy_no_accel_jump "0"
881.	joy_pitchsensitivity "-1" // joystick pitch sensitivity
882.	joy_pitchthreshold "0"
883.	joy_response_look "0" // 1=Acceleration Promotion
884.	joy_response_look_pitch "1" // 1=Acceleration Promotion
885.	joy_response_move "1" // 1/sensitivity
886.	joy_sensitive_step0 "0"
887.	joy_sensitive_step1 "0"
888.	joy_sensitive_step2 "0"
889.	joy_sidesensitivity "1"
890.	joy_sidethreshold "0"
891.	joy_wingmanwarrior_centerhack "0" // Wingman warrior centering hack.
892.	joy_wingmanwarrior_turnhack "0" // Wingman warrior hack related to turn axes.
893.	joy_yawsensitivity "-1" // joystick yaw sensitivity
894.	joy_yawthreshold "0"
895.	jpeg // Take a jpeg screenshot: jpeg <filename> <quality 1-100>.
896.	kdtree_test // Tests spatial partition for entities queries.
897.	key_findbinding // Find key bound to specified command string.
898.	key_listboundkeys // List bound keys with bindings.
899.	key_updatelayout // Updates game keyboard layout to current windows keyboard setting.
900.	kick // Kick a player by name.
901.	kickid // with a message.
902.	kickid_ex // provide a force-the-kick flag and also assign a message.
903.	kill // Kills the player with generic damage
904.	killserver // Shutdown the server.
905.	killvector // Kills a player applying force. Usage: killvector <player> <x value> <y value> <z value>
906.	lastinv
907.	lightcache_maxmiss "2"
908.	lightprobe // Samples the lighting environment. Creates a cubemap and a file indicating the local lighting in a subdirectory called material
909.	light_crosshair // Show texture color at crosshair
910.	linefile // Parses map leak data from .lin file
911.	listdemo // List demo file contents.
912.	listid // Lists banned users.
913.	listip // List IP addresses on the ban list.
914.	listissues // List all the issues that can be voted on.
915.	listmodels // List loaded models.
916.	listRecentNPCSpeech // Displays a list of the last 5 lines of speech from NPCs.
917.	load // Load a saved game.
918.	loadcommentary
919.	loader_dump_table
920.	lobby_voice_chat_enabled "1" // Lobby microphone is enabled when this is set to 1
921.	locator_split_len "0"
922.	locator_split_maxwide_percent "0"
923.	lockMoveControllerRet "0"
924.	log // and udp < on | off >.
925.	logaddress_add // Set address and port for remote host <ip:port>.
926.	logaddress_del // Remove address and port for remote host <ip:port>.
927.	logaddress_delall // Remove all udp addresses being logged to
928.	logaddress_list // List all addresses currently being used by logaddress.
929.	log_color // Set the color of a logging channel.
930.	log_dumpchannels // Dumps information about all logging channels.
931.	log_flags // Set the flags on a logging channel.
932.	log_level // Set the spew level of a logging channel.
933.	lookspring "0"
934.	lookstrafe "0"
935.	loopsingleplayermaps "0"
936.	map // Start playing on specified map.
937.	mapcycledisabled "0" // repeats the same map after each match instead of using the map cycle
938.	mapgroup // Specify a map group
939.	mapoverview_allow_client_draw "0" // Allow a client to draw on the map overview
940.	maps // Displays list of maps.
941.	map_background // Runs a map as the background to the main menu.
942.	map_commentary // on a specified map.
943.	map_edit
944.	map_setbombradius // Sets the bomb radius for the map.
945.	map_showbombradius // Shows bomb radius from the center of each bomb site and planted bomb.
946.	map_showspawnpoints // Shows player spawn points (red=invalid). Optionally pass in the duration.
947.	mat_accelerate_adjust_exposure_down "40"
948.	mat_aniso_disable "0" // NOTE: You must change mat_forceaniso after changing this convar for this to take effect
949.	mat_autoexposure_max "2"
950.	mat_autoexposure_max_multiplier "1"
951.	mat_autoexposure_min "0"
952.	mat_bloomamount_rate "0"
953.	mat_bumpbasis "0"
954.	mat_camerarendertargetoverlaysize "128"
955.	mat_colcorrection_forceentitiesclientside "0" // Forces color correction entities to be updated on the client
956.	mat_colorcorrection "1"
957.	mat_configcurrent // show the current video control panel config for the material system
958.	mat_crosshair // Display the name of the material under the crosshair
959.	mat_crosshair_edit // open the material under the crosshair in the editor defined by mat_crosshair_edit_editor
960.	mat_crosshair_explorer // open the material under the crosshair in explorer and highlight the vmt file
961.	mat_crosshair_printmaterial // print the material under the crosshair
962.	mat_crosshair_reloadmaterial // reload the material under the crosshair
963.	mat_custommaterialusage // Show memory usage for custom weapon materials.
964.	mat_debugalttab "0"
965.	mat_debug_bloom "0"
966.	mat_debug_postprocessing_effects "0" // 2 = only apply post-processing to the centre of the screen
967.	mat_disable_bloom "0"
968.	mat_displacementmap "1"
969.	mat_drawflat "0"
970.	mat_drawgray "0"
971.	mat_drawwater "1"
972.	mat_dynamiclightmaps "0"
973.	mat_dynamicPaintmaps "0"
974.	mat_dynamic_tonemapping "1"
975.	mat_edit // Bring up the material under the crosshair in the editor
976.	mat_exposure_center_region_x "0"
977.	mat_exposure_center_region_y "0"
978.	mat_fastclip "0"
979.	mat_fastnobump "0"
980.	mat_fillrate "0"
981.	mat_forcedynamic "0"
982.	mat_force_bloom "0"
983.	mat_force_tonemap_min_avglum "-1" // Override. Old default was 3.0
984.	mat_force_tonemap_percent_bright_pixels "-1" // Override. Old value was 2.0
985.	mat_force_tonemap_percent_target "-1" // Override. Old default was 60.
986.	mat_force_tonemap_scale "0"
987.	mat_frame_sync_enable "1"
988.	mat_frame_sync_force_texture "0" // Force frame syncing to lock a managed texture.
989.	mat_fullbright "0"
990.	mat_hdr_enabled // Report if HDR is enabled for debugging
991.	mat_hdr_uncapexposure "0"
992.	mat_hsv "0"
993.	mat_info // Shows material system info
994.	mat_leafvis "0" // or [3] entire PVS (see mat_leafvis_draw_mask for what
995.	mat_loadtextures "1"
996.	mat_local_contrast_edge_scale_override "-1000"
997.	mat_local_contrast_midtone_mask_override "-1"
998.	mat_local_contrast_scale_override "0"
999.	mat_local_contrast_vignette_end_override "-1"
1000.	mat_local_contrast_vignette_start_override "-1"
1001.	mat_lpreview_mode "-1"
1002.	mat_luxels "0"
1003.	mat_measurefillrate "0"
1004.	mat_monitorgamma "2" // monitor gamma (typically 2.2 for CRT and 1.7 for LCD)
1005.	mat_monitorgamma_tv_enabled "0"
1006.	mat_morphstats "0"
1007.	mat_norendering "0"
1008.	mat_normalmaps "0"
1009.	mat_normals "0"
1010.	mat_postprocess_enable "1"
1011.	mat_powersavingsmode "0" // Power Savings Mode
1012.	mat_proxy "0"
1013.	mat_queue_mode "-1" // 2=queued
1014.	mat_queue_priority "1"
1015.	mat_reloadallcustommaterials // Reloads all custom materials
1016.	mat_reloadallmaterials // Reloads all materials
1017.	mat_reloadmaterial // Reloads a single material
1018.	mat_reloadtextures // Reloads all textures
1019.	mat_remoteshadercompile "0"
1020.	mat_rendered_faces_count "0" // Set to N to count how many faces each model draws each frame and spew the top N offenders from the last 150 frames (use mat_re
1021.	mat_rendered_faces_spew // mat_rendered_faces_spew <n> Spew the number of faces rendered for the top N models used this frame (mat_rendered_faces_count
1022.	mat_reporthwmorphmemory // Reports the amount of size in bytes taken up by hardware morph textures.
1023.	mat_reversedepth "0"
1024.	mat_savechanges // saves current video configuration to the registry
1025.	mat_setvideomode // windowed state of the material system
1026.	mat_shadercount // display count of all shaders and reset that count
1027.	mat_showcamerarendertarget "0"
1028.	mat_showframebuffertexture "0"
1029.	mat_showlowresimage "0"
1030.	mat_showmaterials // Show materials.
1031.	mat_showmaterialsverbose // Show materials (verbose version).
1032.	mat_showmiplevels "0" // 1: everything else
1033.	mat_showtextures // Show used textures.
1034.	mat_showwatertextures "0"
1035.	mat_show_histogram "0"
1036.	mat_show_texture_memory_usage "0" // Display the texture memory usage on the HUD.
1037.	mat_softwareskin "0"
1038.	mat_spewalloc "0"
1039.	mat_spewvertexandpixelshaders // Print all vertex and pixel shaders currently loaded to the console
1040.	mat_stub "0"
1041.	mat_surfaceid "0"
1042.	mat_surfacemat "0"
1043.	mat_tessellationlevel "6"
1044.	mat_tessellation_accgeometrytangents "0"
1045.	mat_tessellation_cornertangents "1"
1046.	mat_tessellation_update_buffers "1"
1047.	mat_texture_list_content_path "0" // itll assume your content directory is next to the currently runn
1048.	mat_texture_list_exclude // save - saves exclude list file
1049.	mat_texture_list_txlod // -1 to dec resolution
1050.	mat_texture_list_txlod_sync // save - saves all changes to material content files
1051.	mat_tonemap_algorithm "1" // 0 = Original Algorithm 1 = New Algorithm
1052.	mat_updateconvars // updates the video config convars
1053.	mat_viewportscale "1" // Scale down the main viewport (to reduce GPU impact on CPU profiling)
1054.	mat_wireframe "0"
1055.	mat_yuv "0"
1056.	maxplayers // Change the maximum number of players allowed on this server.
1057.	mc_accel_band_size "0" // Percentage of half the screen width or height.
1058.	mc_dead_zone_radius "0" // 0 to 0.9. 0 being just around the center of the screen and 1 being the edges of the screen.
1059.	mc_max_pitchrate "100" // (degrees/sec)
1060.	mc_max_yawrate "230" // (degrees/sec)
1061.	mdlcache_dump_dictionary_state // Dump the state of the MDLCache Dictionary.
1062.	memory // Print memory stats.
1063.	mem_compact
1064.	mem_dump // Dump memory stats to text file.
1065.	mem_dumpvballocs // Dump VB memory allocation stats.
1066.	mem_eat
1067.	mem_incremental_compact
1068.	mem_incremental_compact_rate "0" // Rate at which to attempt internal heap compation
1069.	mem_test
1070.	mem_vcollide // Dumps the memory used by vcollides
1071.	mem_verify // Verify the validity of the heap
1072.	menuselect // menuselect
1073.	minisave // Saves game (for current level only!)
1074.	mm_csgo_community_search_players_min "3" // When performing CSGO community matchmaking look for servers with at least so many human players
1075.	mm_datacenter_debugprint // Shows information retrieved from data center
1076.	mm_debugprint // Show debug information about current matchmaking session
1077.	mm_dedicated_force_servers "0" // Comma delimited list of ip:port of servers used to search for dedicated servers instead of searching for public servers. Use sy
1078.	mm_dedicated_search_maxping "150" // Longest preferred ping to dedicated servers for games
1079.	mm_dlc_debugprint // Shows information about dlc
1080.	mm_queue_show_stats // Display global server stats
1081.	mm_server_search_lan_ports "27015" // Ports to scan during LAN games discovery. Also used to discover and correctly connect to dedicated LAN servers behind NATs.
1082.	mm_session_search_ping_buckets "4"
1083.	mm_session_search_qos_timeout "15"
1084.	mod_combiner_info // debug spew for Combiner Info
1085.	mod_DumpWeaponWiewModelCache // Dumps the weapon view model cache contents
1086.	mod_DumpWeaponWorldModelCache // Dumps the weapon world model cache contents
1087.	molotov_throw_detonate_time "2"
1088.	motdfile "0" // The MOTD file to load.
1089.	movie_fixwave // etc.
1090.	mp_afterroundmoney "0" // amount of money awared to every player after each round
1091.	mp_autokick "1" // Kick idle/team-killing/team-damaging players
1092.	mp_autoteambalance "1"
1093.	mp_backup_restore_list_files // accepts a numeric parameter to limit the number o
1094.	mp_backup_restore_load_file // scores and team scores; resets to the next round after the backup
1095.	mp_backup_round_file "0" // If set then server will save all played rounds information to files filename_date_time_team1_team2_mapname_roundnum_score1_scor
1096.	mp_backup_round_file_last "0" // Every time a backup file is written the value of this convar gets updated to hold the name of the backup file.
1097.	mp_backup_round_file_pattern "0" // e.g.%prefix%_%date%_%time%_%team1%_
1098.	mp_buytime "90" // How many seconds after round start players can buy items for.
1099.	mp_buy_allow_grenades "1" // Whether players can purchase grenades from the buy menu or not.
1100.	mp_buy_anywhere "0" // not only in buyzones. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.
1100.	mp_buy_anywhere "0" // not only in buyzones. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.
1101.	mp_buy_during_immunity "0" // ignoring buytime. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.
1102.	mp_c4timer "45" // how long from when the C4 is armed until it blows
1103.	mp_competitive_endofmatch_extra_time "15" // After a competitive match finishes rematch voting extra time is given for rankings.
1104.	mp_ct_default_grenades "0" // separate each weapon class with a space like thi
1105.	mp_ct_default_melee "0" // it shou
1106.	mp_ct_default_primary "0" // The default primary (rifle) weapon that the CTs will spawn with
1107.	mp_ct_default_secondary "0" // The default secondary (pistol) weapon that the CTs will spawn with
1108.	mp_death_drop_c4 "1" // Whether c4 is droppable
1109.	mp_death_drop_defuser "1" // Drop defuser on player death
1110.	mp_death_drop_grenade "2" // 2=current or best
1111.	mp_death_drop_gun "1" // 2=current or best
1112.	mp_default_team_winner_no_objective "-1" // the value of this convar will declare the winner when the time run
1113.	mp_defuser_allocation "0" // 2=everyone
1114.	mp_disable_autokick // Prevents a userid from being auto-kicked
1115.	mp_display_kill_assists "1" // Whether to display and score player assists
1116.	mp_dm_bonus_length_max "30" // Maximum time the bonus time will last (in seconds)
1117.	mp_dm_bonus_length_min "30" // Minimum time the bonus time will last (in seconds)
1118.	mp_dm_bonus_percent "50" // Percent of points additionally awarded when someone gets a kill with the bonus weapon during the bonus period.
1119.	mp_dm_time_between_bonus_max "40" // Maximum time a bonus time will start after the round start or after the last bonus (in seconds)
1120.	mp_dm_time_between_bonus_min "30" // Minimum time a bonus time will start after the round start or after the last bonus (in seconds)
1121.	mp_do_warmup_offine "0" // Whether or not to do a warmup period at the start of a match in an offline (bot) match.
1122.	mp_do_warmup_period "1" // Whether or not to do a warmup period at the start of a match.
1123.	mp_dump_timers // Prints round timers to the console for debugging
1124.	mp_endmatch_votenextleveltime "20" // players have this much time to vote on the next map at match end.
1125.	mp_endmatch_votenextmap "1" // Whether or not players vote for the next map at the end of the match when the final scoreboard comes up
1126.	mp_endmatch_votenextmap_keepcurrent "1" // the current map is not guaranteed to be in the
1127.	mp_forcecamera "1" // Restricts spectator modes for dead players. 0 = Any team. 1 = Only own team. 2 = No one; fade to black on death (previously mp_
1128.	mp_forcerespawnplayers // Force all players to respawn.
1129.	mp_forcewin // Forces team to win
1130.	mp_force_pick_time "15" // The amount of time a player has on the team screen to make a selection before being auto-teamed
1131.	mp_freezetime "6" // how many seconds to keep players frozen when the round starts
1132.	mp_free_armor "0" // Determines whether armor and helmet are given automatically.
1133.	mp_friendlyfire "0" // Allows team members to injure other members of their team
1134.	mp_ggprogressive_round_restart_delay "15" // Number of seconds to delay before restarting a round after a win in gungame progessive
1135.	mp_ggtr_bomb_defuse_bonus "1" // Number of bonus upgrades to award the CTs when they defuse a gun game bomb
1136.	mp_ggtr_bomb_detonation_bonus "1" // Number of bonus upgrades to award the Ts when they detonate a gun game bomb
1137.	mp_ggtr_bomb_pts_for_flash "4" // Kill points required in a round to get a bonus flash grenade
1138.	mp_ggtr_bomb_pts_for_he "3" // Kill points required in a round to get a bonus HE grenade
1139.	mp_ggtr_bomb_pts_for_molotov "5" // Kill points required in a round to get a bonus molotov cocktail
1140.	mp_ggtr_bomb_pts_for_upgrade "2" // Kill points required to upgrade a players weapon
1141.	mp_ggtr_bomb_respawn_delay "0" // Number of seconds to delay before making the bomb available to a respawner in gun game
1142.	mp_ggtr_end_round_kill_bonus "1" // Number of bonus points awarded in Demolition Mode when knife kill ends round
1143.	mp_ggtr_halftime_delay "0" // Number of seconds to delay during TR Mode halftime
1144.	mp_ggtr_last_weapon_kill_ends_half "0" // End the half and give a team round point when a player makes a kill using the final weapon
1145.	mp_give_player_c4 "1" // Whether this map should spawn a c4 bomb for a player or not.
1146.	mp_halftime "0" // Determines whether the match switches sides in a halftime event.
1147.	mp_halftime_duration "15" // Number of seconds that halftime lasts
1148.	mp_halftime_pausetimer "0" // Set to 1 to stay in halftime indefinitely. Set to 0 to resume the timer.
1149.	mp_hostages_max "2" // Maximum number of hostages to spawn.
1150.	mp_hostages_rescuetime "1" // Additional time added to round time if a hostage is reached by a CT.
1151.	mp_hostages_run_speed_modifier "1" // slow down hostages by setting this to < 1.0.
1152.	mp_hostages_spawn_farthest "0" // When enabled will consistently force the farthest hostages to spawn.
1153.	mp_hostages_spawn_force_positions "0" // 6
1154.	mp_hostages_spawn_same_every_round "1" // 1 = same spawns for entire match.
1155.	mp_hostages_takedamage "0" // Whether or not hostages can be hurt.
1156.	mp_humanteam "0" // T}
1157.	mp_ignore_round_win_conditions "0" // Ignore conditions which would end the current round
1158.	mp_join_grace_time "2" // Number of seconds after round start to allow a player to join a game
1159.	mp_limitteams "2" // Max # of players 1 team can have over another (0 disables check)
1160.	mp_logdetail "0" // 3=both)
1161.	mp_match_can_clinch "1" // Can a team clinch and end the match by being so far ahead that the other team has no way to catching up?
1162.	mp_match_end_changelevel "0" // perform a changelevel even if next map is the same
1163.	mp_match_end_restart "0" // perform a restart instead of loading a new map
1164.	mp_match_restart_delay "15" // Time (in seconds) until a match restarts.
1165.	mp_maxmoney "16000" // maximum amount of money allowed in a players account
1166.	mp_maxrounds "0" // max number of rounds to play before server changes maps
1167.	mp_molotovusedelay "15" // Number of seconds to delay before the molotov can be used after acquiring it
1168.	mp_overtime_enable "0" // use overtime rules to determine winner
1169.	mp_overtime_halftime_pausetimer "0" // If set to 1 will set mp_halftime_pausetimer to 1 before every half of overtime. Set mp_halftime_pausetimer to 0 to resume the t
1170.	mp_overtime_maxrounds "6" // When overtime is enabled play additional rounds to determine winner
1171.	mp_overtime_startmoney "10000" // Money assigned to all players at start of every overtime half
1172.	mp_pause_match // Pause the match in the next freeze time
1173.	mp_playercashawards "1" // Players can earn money by performing in-game actions
1174.	mp_playerid "0" // Controls what information player see in the status bar: 0 all names; 1 team names; 2 no names
1175.	mp_playerid_delay "0" // Number of seconds to delay showing information in the status bar
1176.	mp_playerid_hold "0" // Number of seconds to keep showing old information in the status bar
1177.	mp_radar_showall "0" // Determines who should see all. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.
1178.	mp_randomspawn "0" // Determines whether players are to spawn. 0 = default; 1 = both teams; 2 = Terrorists; 3 = CTs.
1179.	mp_randomspawn_los "1" // determines whether to test Line of Sight when spawning.
1180.	mp_respawnwavetime_ct "10" // Time between respawn waves for CTs.
1181.	mp_respawnwavetime_t "10" // Time between respawn waves for Terrorists.
1182.	mp_respawn_immunitytime "4" // How many seconds after respawn immunity lasts.
1183.	mp_respawn_on_death_ct "0" // counter-terrorists will respawn after dying.
1184.	mp_respawn_on_death_t "0" // terrorists will respawn after dying.
1185.	mp_restartgame "0" // game will restart in the specified number of seconds
1186.	mp_roundtime "5" // How many minutes each round takes.
1187.	mp_roundtime_defuse "0" // How many minutes each round of Bomb Defuse takes. If 0 then use mp_roundtime instead.
1188.	mp_roundtime_hostage "0" // How many minutes each round of Hostage Rescue takes. If 0 then use mp_roundtime instead.
1189.	mp_round_restart_delay "7" // Number of seconds to delay before restarting a round after a win
1190.	mp_scrambleteams // Scramble the teams and restart the game
1191.	mp_solid_teammates "1" // Determines whether teammates are solid or not.
1192.	mp_spawnprotectiontime "5" // Kick players who team-kill within this many seconds of a round restart.
1193.	mp_spectators_max "2" // How many spectators are allowed in a match.
1194.	mp_spec_swapplayersides "0" // Toggle set the player names and team names to the opposite side in which they are are on the spectator panel.
1195.	mp_startmoney "800" // amount of money each player gets when they reset
1196.	mp_swapteams // Swap the teams and restart the game
1197.	mp_switchteams // Switch teams and restart the game
1198.	mp_td_dmgtokick "300" // The damage threshhold players have to exceed in a match to get kicked.
1199.	mp_td_dmgtowarn "200" // The damage threshhold players have to exceed in a match to get warned that they are about to be kicked.
1200.	mp_td_spawndmgthreshold "50" // The damage threshold players have to exceed at the start of the round to be warned/kick.
1201.	mp_teamcashawards "1" // Teams can earn money by performing in-game actions
1202.	mp_teamflag_1 "0" // Enter a countrys alpha 2 code to show that flag next to team 1s name in the spectator scoreboard.
1203.	mp_teamflag_2 "0" // Enter a countrys alpha 2 code to show that flag next to team 2s name in the spectator scoreboard.
1204.	mp_teammates_are_enemies "0" // your teammates act as enemies and all players are valid targets.
1205.	mp_teamname_1 "0" // A non-empty string overrides the first teams name.
1206.	mp_teamname_2 "0" // A non-empty string overrides the second teams name.
1207.	mp_timelimit "5" // game time per map in minutes
1208.	mp_tkpunish "0" // 1=yes}
1209.	mp_tournament_restart // Restart Tournament Mode on the current level.
1210.	mp_t_default_grenades "0" // separate each weapon class with a space like this
1211.	mp_t_default_melee "0" // The default melee weapon that the Ts will spawn with
1212.	mp_t_default_primary "0" // The default primary (rifle) weapon that the Ts will spawn with
1213.	mp_t_default_secondary "0" // The default secondary (pistol) weapon that the Ts will spawn with
1214.	mp_unpause_match // Resume the match
1215.	mp_use_respawn_waves "0" // they will respawn in waves.
1216.	mp_verbose_changelevel_spew "1"
1217.	mp_warmuptime "30" // How long the warmup period lasts. Changing this value resets warmup.
1218.	mp_warmup_end // End warmup immediately.
1219.	mp_warmup_pausetimer "0" // set to 2 to allow players to unpause warmup. Set to 0 to resume the timer.
1220.	mp_warmup_start // Start warmup.
1221.	mp_weapons_allow_map_placed "0" // the game will not delete weapons placed in the map.
1222.	mp_weapons_allow_randomize "0" // If set to >0 the buy menu will populate with random weapons with the value of this convar specifying how many from each weapon
1223.	mp_weapons_allow_zeus "1" // Determines whether the Zeus is purchasable or not.
1224.	mp_weapons_glow_on_ground "0" // weapons on the ground will have a glow around them.
1225.	mp_win_panel_display_time "3" // The amount of time to show the win panel between matches / halfs
1226.	ms_player_dump_properties // Prints a dump the current players property data
1227.	multvar // Multiply specified convar value.
1228.	muzzleflash_light "1"
1229.	m_customaccel "3" // Custom mouse acceleration: 0: custom accelaration disabled 1: mouse_acceleration = min(m_customaccel_max, pow(raw_mouse_delta,
1230.	m_customaccel_exponent "1" // Mouse move is raised to this power before being scaled by scale factor.
1231.	m_customaccel_max "0" // 0 for no limit
1232.	m_customaccel_scale "0" // Custom mouse acceleration value.
1233.	m_forward "1" // Mouse forward factor.
1234.	m_mouseaccel1 "0" // Windows mouse acceleration initial threshold (2x movement).
1235.	m_mouseaccel2 "0" // Windows mouse acceleration secondary threshold (4x movement).
1236.	m_mousespeed "1" // 2 to enable secondary threshold
1237.	m_pitch "0" // Mouse pitch factor.
1238.	m_rawinput "1" // Use Raw Input for mouse input.
1239.	m_side "0" // Mouse side factor.
1240.	m_yaw "0" // Mouse yaw factor.
1241.	name "0" // Current user name
1242.	nav_add_to_selected_set // Add current area to the selected set.
1243.	nav_add_to_selected_set_by_id // Add specified area id to the selected set.
1244.	nav_analyze // Re-analyze the current Navigation Mesh and save it to disk.
1245.	nav_area_bgcolor "503316480" // RGBA color to draw as the background color for nav areas while editing.
1246.	nav_area_max_size "50" // Max area size created in nav generation
1247.	nav_avoid // Toggles the avoid this area when possible flag used by the AI system.
1248.	nav_begin_area // drag the opposite corner to the desired location and
1249.	nav_begin_deselecting // Start continuously removing from the selected set.
1250.	nav_begin_drag_deselecting // Start dragging a selection area.
1251.	nav_begin_drag_selecting // Start dragging a selection area.
1252.	nav_begin_selecting // Start continuously adding to the selected set.
1253.	nav_begin_shift_xy // Begin shifting the Selected Set.
1254.	nav_build_ladder // Attempts to build a nav ladder on the climbable surface under the cursor.
1255.	nav_check_connectivity // Checks to be sure every (or just the marked) nav area can get to every goal area for the map (hostages or bomb site).
1256.	nav_check_file_consistency // Scans the maps directory and reports any missing/out-of-date navigation files.
1257.	nav_check_floor // Updates the blocked/unblocked status for every nav area.
1258.	nav_check_stairs // Update the nav mesh STAIRS attribute
1259.	nav_chop_selected // Chops all selected areas into their component 1x1 areas
1260.	nav_clear_attribute // Remove given nav attribute from all areas in the selected set.
1261.	nav_clear_selected_set // Clear the selected set.
1262.	nav_clear_walkable_marks // Erase any previously placed walkable positions.
1263.	nav_compress_id // Re-orders area and ladder IDs so they are continuous.
1264.	nav_connect // then invoke the connect command. Note that this creates a
1265.	nav_coplanar_slope_limit "0"
1266.	nav_coplanar_slope_limit_displacement "0"
1267.	nav_corner_adjust_adjacent "18" // radius used to raise/lower corners in nearby areas when raising/lowering corners.
1268.	nav_corner_lower // Lower the selected corner of the currently marked Area.
1269.	nav_corner_place_on_ground // Places the selected corner of the currently marked Area on the ground.
1270.	nav_corner_raise // Raise the selected corner of the currently marked Area.
1271.	nav_corner_select // Select a corner of the currently marked Area. Use multiple times to access all four corners.
1272.	nav_create_area_at_feet "0" // Anchor nav_begin_area Z to editing players feet
1273.	nav_create_place_on_ground "0" // nav areas will be placed flush with the ground when created by hand.
1274.	nav_crouch // Toggles the must crouch in this area flag used by the AI system.
1275.	nav_debug_blocked "0"
1276.	nav_delete // Deletes the currently highlighted Area.
1277.	nav_delete_marked // Deletes the currently marked Area (if any).
1278.	nav_disconnect // then invoke the disconnect command. This will remove all connec
1279.	nav_displacement_test "10000" // Checks for nodes embedded in displacements (useful for in-development maps)
1280.	nav_dont_hide // Toggles the area is not suitable for hiding spots flag used by the AI system.
1281.	nav_draw_limit "500" // The maximum number of areas to draw in edit mode
1282.	nav_edit "0" // Set to one to interactively edit the Navigation Mesh. Set to zero to leave edit mode.
1283.	nav_end_area // Defines the second corner of a new Area or Ladder and creates it.
1284.	nav_end_deselecting // Stop continuously removing from the selected set.
1285.	nav_end_drag_deselecting // Stop dragging a selection area.
1286.	nav_end_drag_selecting // Stop dragging a selection area.
1287.	nav_end_selecting // Stop continuously adding to the selected set.
1288.	nav_end_shift_xy // Finish shifting the Selected Set.
1289.	nav_flood_select // use this command again.
1290.	nav_generate // Generate a Navigation Mesh for the current map and save it to disk.
1291.	nav_generate_fencetops "1" // Autogenerate nav areas on fence and obstacle tops
1292.	nav_generate_fixup_jump_areas "1" // Convert obsolete jump areas into 2-way connections
1293.	nav_generate_incremental // Generate a Navigation Mesh for the current map and save it to disk.
1294.	nav_generate_incremental_range "2000"
1295.	nav_generate_incremental_tolerance "0" // Z tolerance for adding new nav areas.
1296.	nav_gen_cliffs_approx // post-processing approximation
1297.	nav_jump // Toggles the traverse this area by jumping flag used by the AI system.
1298.	nav_ladder_flip // Flips the selected ladders direction.
1299.	nav_load // Loads the Navigation Mesh for the current map.
1300.	nav_lower_drag_volume_max // Lower the top of the drag select volume.
1301.	nav_lower_drag_volume_min // Lower the bottom of the drag select volume.
1302.	nav_make_sniper_spots // Chops the marked area into disconnected sub-areas suitable for sniper spots.
1303.	nav_mark // Marks the Area or Ladder under the cursor for manipulation by subsequent editing commands.
1304.	nav_mark_attribute // Set nav attribute for all areas in the selected set.
1305.	nav_mark_unnamed // Mark an Area with no Place name. Useful for finding stray areas missed when Place Painting.
1306.	nav_mark_walkable // Mark the current location as a walkable position. These positions are used as seed locations when sampling the map to generate
1307.	nav_max_view_distance "0" // Maximum range for precomputed nav mesh visibility (0 = default 1500 units)
1308.	nav_max_vis_delta_list_length "64"
1309.	nav_merge // and invoke the merge comm
1310.	nav_merge_mesh // Merges a saved selected set into the current mesh.
1311.	nav_no_hostages // Toggles the hostages cannot use this area flag used by the AI system.
1312.	nav_no_jump // Toggles the dont jump in this area flag used by the AI system.
1313.	nav_place_floodfill // and flood-fills the Place to all adjacent Areas. Flood-filli
1314.	nav_place_list // Lists all place names used in the map.
1315.	nav_place_pick // Sets the current Place to the Place of the Area under the cursor.
1316.	nav_place_replace // Replaces all instances of the first place with the second place.
1317.	nav_place_set // Sets the Place of all selected areas to the current Place.
1318.	nav_potentially_visible_dot_tolerance "0"
1319.	nav_precise // Toggles the dont avoid obstacles flag used by the AI system.
1320.	nav_quicksave "0" // Set to one to skip the time consuming phases of the analysis. Useful for data collection and testing.
1321.	nav_raise_drag_volume_max // Raise the top of the drag select volume.
1322.	nav_raise_drag_volume_min // Raise the bottom of the drag select volume.
1323.	nav_recall_selected_set // Re-selects the stored selected set.
1324.	nav_remove_from_selected_set // Remove current area from the selected set.
1325.	nav_remove_jump_areas // replacing them with connections.
1326.	nav_run // Toggles the traverse this area by running flag used by the AI system.
1327.	nav_save // Saves the current Navigation Mesh to disk.
1328.	nav_save_selected // Writes the selected set to disk for merging into another mesh via nav_merge_mesh.
1329.	nav_selected_set_border_color "-16751516" // Color used to draw the selected set borders while editing.
1330.	nav_selected_set_color "1623785472.000" // Color used to draw the selected set background while editing.
1331.	nav_select_blocked_areas // Adds all blocked areas to the selected set
1332.	nav_select_damaging_areas // Adds all damaging areas to the selected set
1333.	nav_select_half_space // Selects any areas that intersect the given half-space.
1334.	nav_select_invalid_areas // Adds all invalid areas to the Selected Set.
1335.	nav_select_obstructed_areas // Adds all obstructed areas to the selected set
1336.	nav_select_overlapping // Selects nav areas that are overlapping others.
1337.	nav_select_radius // Adds all areas in a radius to the selection set
1338.	nav_select_stairs // Adds all stairway areas to the selected set
1339.	nav_set_place_mode // Sets the editor into or out of Place mode. Place mode allows labelling of Area with Place names.
1340.	nav_shift // Shifts the selected areas by the specified amount
1341.	nav_show_approach_points "0" // Show Approach Points in the Navigation Mesh.
1342.	nav_show_area_info "0" // Duration in seconds to show nav area ID and attributes while editing
1343.	nav_show_compass "0"
1344.	nav_show_continguous "0" // Highlight non-contiguous connections
1345.	nav_show_danger "0" // Show current danger levels.
1346.	nav_show_light_intensity "0"
1347.	nav_show_nodes "0"
1348.	nav_show_node_grid "0"
1349.	nav_show_node_id "0"
1350.	nav_show_player_counts "0" // Show current player counts in each area.
1351.	nav_show_potentially_visible "0" // Show areas that are potentially visible from the current nav area
1352.	nav_simplify_selected // Chops all selected areas into their component 1x1 areas and re-merges them together into larger areas
1353.	nav_slope_limit "0" // The ground unit normals Z component must be greater than this for nav areas to be generated.
1354.	nav_slope_tolerance "0" // The ground unit normals Z component must be this close to the nav areas Z component to be generated.
1355.	nav_snap_to_grid "0" // Snap to the nav generation grid when creating new nav areas
1356.	nav_solid_props "0" // Make props solid to nav generation/editing
1357.	nav_splice // connected area between them.
1358.	nav_split // align the split line using your cursor and invoke the split command.
1359.	nav_split_place_on_ground "0" // nav areas will be placed flush with the ground when split.
1360.	nav_stand // Toggles the stand while hiding flag used by the AI system.
1361.	nav_stop // Toggles the must stop when entering this area flag used by the AI system.
1362.	nav_store_selected_set // Stores the current selected set for later retrieval.
1363.	nav_strip // and Encounter Spots from the current Area.
1364.	nav_subdivide // Subdivides all selected areas.
1365.	nav_test_node "0"
1366.	nav_test_node_crouch "0"
1367.	nav_test_node_crouch_dir "4"
1368.	nav_test_stairs // Test the selected set for being on stairs
1369.	nav_toggle_deselecting // Start or stop continuously removing from the selected set.
1370.	nav_toggle_in_selected_set // Remove current area from the selected set.
1371.	nav_toggle_place_mode // Toggle the editor into and out of Place mode. Place mode allows labelling of Area with Place names.
1372.	nav_toggle_place_painting // pointing at an Area will paint it with the current Place.
1373.	nav_toggle_selected_set // Toggles all areas into/out of the selected set.
1374.	nav_toggle_selecting // Start or stop continuously adding to the selected set.
1375.	nav_transient // Toggles the area is transient and may become blocked flag used by the AI system.
1376.	nav_unmark // Clears the marked Area or Ladder.
1377.	nav_update_blocked // Updates the blocked/unblocked status for every nav area.
1378.	nav_update_lighting // Recomputes lighting values
1379.	nav_update_visibility_on_edit "0" // If nonzero editing the mesh will incrementally recompue visibility
1380.	nav_use_place // the current Place is set.
1381.	nav_walk // Toggles the traverse this area by walking flag used by the AI system.
1382.	nav_warp_to_mark // Warps the player to the marked area.
1383.	nav_world_center // Centers the nav mesh in the world
1384.	net_allow_multicast "1"
1385.	net_blockmsg "0" // Discards incoming message: <0|1|name>
1386.	net_channels // Shows net channel info
1387.	net_droponsendoverflow "0" // channel will drop client when sending too much data causes buffer overrun
1388.	net_droppackets "0" // Drops next n packets on client
1389.	net_dumpeventstats // Dumps out a report of game event network usage
1390.	net_earliertempents "0"
1391.	net_fakejitter "0" // Jitter fakelag packet time
1392.	net_fakelag "0" // Lag all incoming network data (including loopback) by this many milliseconds.
1393.	net_fakeloss "0" // Simulate packet loss as a percentage (negative means drop 1/n packets)
1394.	net_graph "0"
1395.	net_graphheight "65" // Height of netgraph panel
1396.	net_graphmsecs "400" // The latency graph represents this many milliseconds.
1397.	net_graphpos "1"
1398.	net_graphproportionalfont "1" // Determines whether netgraph font is proportional or not
1399.	net_graphshowinterp "1" // Draw the interpolation graph.
1400.	net_graphshowlatency "1" // Draw the ping/packet loss graph.
1401.	net_graphshowsvframerate "0" // Draw the server framerate graph.
1402.	net_graphsolid "1"
1403.	net_graphtext "1" // Draw text fields
1404.	net_maxroutable "1200" // Requested max packet size before packets are split.
1405.	net_public_adr "0" // this is the public facing ip address string: (x.x.x.x
1406.	net_scale "5"
1407.	net_showreliablesounds "0"
1408.	net_showsplits "0" // Show info about packet splits
1409.	net_showudp "0" // Dump UDP packets summary to console
1410.	net_showudp_oob "0" // Dump OOB UDP packets summary to console
1411.	net_showudp_remoteonly "0" // Dump non-loopback udp only
1412.	net_splitpacket_maxrate "15000" // Max bytes per second when queueing splitpacket chunks
1413.	net_splitrate "1" // Number of fragments for a splitpacket that can be sent per frame
1414.	net_start // Inits multiplayer network sockets
1415.	net_status // Shows current network status
1416.	net_steamcnx_allowrelay "1" // Allow steam connections to attempt to use relay servers as fallback (best if specified on command line: +net_steamcnx_allowrel
1417.	net_steamcnx_enabled "1" // 2 forces use of steam connections instead of raw UDP.
1418.	net_steamcnx_status // Print status of steam connection sockets.
1419.	next "0" // Set to 1 to advance to next frame ( when singlestep == 1 )
1420.	nextdemo // Play next demo in sequence.
1421.	nextlevel "0" // will trigger a changelevel to the specified map at the end of the round
1422.	noclip // Toggle. Player becomes non-solid and flies. Optional argument of 0 or 1 to force enable/disable
1423.	noclip_fixup "1"
1424.	notarget // Toggle. Player becomes hidden to NPCs.
1425.	npc_ally_deathmessage "1"
1426.	npc_ammo_deplete // Subtracts half of the targets ammo
1427.	npc_bipass // s
1428.	npc_combat // Displays text debugging information about the squad and enemy of the selected NPC (See Overlay Text) Arguments: {npc_name}
1429.	npc_conditions // Displays all the current AI conditions that an NPC has in the overlay text. Arguments: {npc_name} / {npc class_name} / no a
1430.	npc_create // Creates an NPC of the given type where the player is looking (if the given NPC can actually stand at that location). Argumen
1431.	npc_create_aimed // Creates an NPC aimed away from the player of the given type where the player is looking (if the given NPC can actually stand at
1432.	npc_destroy // Removes the given NPC(s) from the universe Arguments: {npc_name} / {npc_class_name} / no argument picks what player is looki
1433.	npc_destroy_unselected // Removes all NPCs from the universe that arent currently selected
1434.	npc_enemies // Shows memory of NPC. Draws an X on top of each memory. Eluded entities drawn in blue (dont know where it went) Unreachable
1435.	npc_focus // Displays red line to NPCs enemy (if has one) and blue line to NPCs target entity (if has one) Arguments: {npc_name} / {np
1436.	npc_freeze // uses the NPC under the crosshair. Arguments
1437.	npc_freeze_unselected // Freeze all NPCs not selected
1438.	npc_go // Selected NPC(s) will go to the location that the player is looking (shown with a purple box) Arguments: -none-
1439.	npc_go_random // Sends all selected NPC(s) to a random node. Arguments: -none-
1440.	npc_heal // Heals the target back to full health
1441.	npc_height_adjust "1" // Enable test mode for ik height adjustment
1442.	npc_kill // Kills the given NPC(s) Arguments: {npc_name} / {npc_class_name} / no argument picks what player is looking at
1443.	npc_nearest // Draws a while box around the NPC(s) nearest node Arguments: {entity_name} / {class_name} / no argument picks what player i
1444.	npc_relationships // Displays the relationships between this NPC and all others. Arguments: {entity_name} / {class_name} / no argument picks wha
1445.	npc_reset // Reloads schedules for all NPCs from their script files Arguments: -none-
1446.	npc_route // Displays the current route of the given NPC as a line on the screen. Waypoints along the route are drawn as small cyan rectang
1447.	npc_select // Select or deselects the given NPC(s) for later manipulation. Selected NPCs are shown surrounded by a red translucent box Arg
1448.	npc_set_freeze // uses the NPC under the crosshair. Arguments
1449.	npc_set_freeze_unselected // Freeze all NPCs not selected
1450.	npc_squads // Obsolete. Replaced by npc_combat
1451.	npc_steering // Displays the steering obstructions of the NPC (used to perform local avoidance) Arguments: {entity_name} / {class_name} / n
1452.	npc_steering_all // Displays the steering obstructions of all NPCs (used to perform local avoidance)
1453.	npc_tasks // Displays detailed text debugging information about the all the tasks of the selected NPC current schedule (See Overlay Text) A
1454.	npc_task_text // Outputs text debugging information to the console about the all the tasks + break conditions of the selected NPC current schedu
1455.	npc_teleport // Selected NPC will teleport to the location that the player is looking (shown with a purple box) Arguments: -none-
1456.	npc_thinknow // Trigger NPC to think
1457.	npc_viewcone // Displays the viewcone of the NPC (where they are currently looking and what the extents of there vision is) Arguments: {ent
1458.	observer_use
1459.	option_duck_method "0"
1460.	option_speed_method "0"
1461.	paintsplat_bias "0" // Change bias value for computing circle buffer
1462.	paintsplat_max_alpha_noise "0" // Max noise value of circle alpha
1463.	paintsplat_noise_enabled "1"
1464.	panel_test_title_safe "0" // Test vgui panel positioning with title safe indentation
1465.	particle_simulateoverflow "0" // Used for stress-testing particle systems. Randomly denies creation of particles.
1466.	particle_test_attach_attachment "0" // Attachment index for attachment mode
1467.	particle_test_attach_mode "0" // follow_origin
1468.	particle_test_file "0" // Name of the particle system to dynamically spawn
1469.	particle_test_start // particle_test_attach_mode and particl
1470.	particle_test_stop // Stops all particle systems on the selected entities. Arguments: {entity_name} / {class_name} / no argument picks what playe
1471.	password "0" // Current server access password
1472.	path // Show the engine filesystem path.
1473.	pause // Toggle the server pause state.
1474.	perfui // Show/hide the level performance tools UI.
1475.	perfvisualbenchmark
1476.	perfvisualbenchmark_abort
1477.	physics_budget // Times the cost of each active object
1478.	physics_constraints // Highlights constraint system graph for an entity
1479.	physics_debug_entity // Dumps debug info for an entity
1480.	physics_highlight_active // Turns on the absbox for all active physics objects
1481.	physics_report_active // Lists all active physics objects
1482.	physics_select // Dumps debug info for an entity
1483.	phys_debug_check_contacts "0"
1484.	phys_show_active "0"
1485.	picker // pivot and debugging text is displayed for whatever entity the play
1486.	ping // Display ping to server.
1487.	pingserver // Ping a server for info
1488.	pixelvis_debug // Dump debug info
1489.	play // Play a sound.
1490.	playdemo // Play a recorded demo file (.dem ).
1491.	player_botdifflast_s "1"
1492.	player_competitive_maplist3 "0"
1493.	player_debug_print_damage "0" // print amount and type of all damage received by player to console.
1494.	player_gamemodelast_m "0"
1495.	player_gamemodelast_s "2"
1496.	player_gametypelast_m "1"
1497.	player_gametypelast_s "1"
1498.	player_last_leaderboards_filter "2" // Last mode setting in the Leaderboards screen
1499.	player_last_leaderboards_mode "0" // Last mode setting in the Leaderboards screen
1500.	player_last_leaderboards_panel "0" // Last opened panel in the Leaderboards screen
1501.	player_last_medalstats_category "3" // Last selected category on the Medals panel in the Medals & Stats screen
1502.	player_last_medalstats_panel "0" // Last opened panel in the Medals & Stats screen
1503.	player_maplast_m "0"
1504.	player_maplast_s "0"
1505.	player_medalstats_most_recent_time "1377959808" // Timestamp of most recently earned achievement displayed on Medals & Stats screen
1506.	player_medalstats_recent_range "432000" // Window (in seconds of recent achievements to show
1507.	player_nevershow_communityservermessage "0"
1508.	player_teamplayedlast "3"
1509.	playflush // reloading from disk in case of changes.
1510.	playgamesound // Play a sound from the game sounds txt file
1511.	playsoundscape // Forces a soundscape to play
1512.	playvideo // Plays a video: <filename> [width height]
1513.	playvideo_end_level_transition // Plays a video fullscreen without ability to skip (unless dev 1) and fades in: <filename> <time>
1514.	playvideo_exitcommand // Plays a video and fires and exit command when it is stopped or finishes: <filename> <exit command>
1515.	playvideo_exitcommand_nointerrupt // Plays a video (without interruption) and fires and exit command when it is stopped or finishes: <filename> <exit command>
1516.	playvideo_nointerrupt // Plays a video without ability to skip: <filename> [width height]
1517.	playvol // Play a sound at a specified volume.
1518.	play_distance "1" // Set to 1:2 foot or 2:10 foot presets.
1519.	play_with_friends_enabled "1"
1520.	plugin_load // plugin_load <filename> : loads a plugin
1521.	plugin_pause // plugin_pause <index> : pauses a loaded plugin
1522.	plugin_pause_all // pauses all loaded plugins
1523.	plugin_print // Prints details about loaded plugins
1524.	plugin_unload // plugin_unload <index> : unloads a plugin
1525.	plugin_unpause // plugin_unpause <index> : unpauses a disabled plugin
1526.	plugin_unpause_all // unpauses all disabled plugins
1527.	post_jump_crouch "0" // This determines how long the third person player character will crouch for after landing a jump. This only affects the third p
1528.	press_x360_button // d[own])
1529.	print_colorcorrection // Display the color correction layer information.
1530.	print_mapgroup // Prints the current mapgroup and the contained maps
1531.	print_mapgroup_sv // Prints the current mapgroup and the contained maps
1532.	progress_enable
1533.	prop_crosshair // Shows name for prop looking at
1534.	prop_debug // props will show colorcoded bounding boxes. Red means ignore all damage. White means respond phys
1535.	prop_dynamic_create // Creates a dynamic prop with a specific .mdl aimed away from where the player is looking. Arguments: {.mdl name}
1536.	prop_physics_create // Creates a physics prop with a specific .mdl aimed away from where the player is looking. Arguments: {.mdl name}
1537.	pwatchent "-1" // Entity to watch for prediction system changes.
1538.	pwatchvar "0" // Entity variable to watch in prediction system for changes.
1539.	quit // Exit the engine.
1540.	quit_prompt // Exit the engine.
1541.	radarvisdistance "1000" // at this distance and beyond you need to be point right at someone to see them
1542.	radarvismaxdot "0" // how closely you have to point at someone to see them beyond max distance
1543.	radarvismethod "1" // 1 for more realistic method
1544.	radarvispow "0" // and still see them on radar.
1545.	radio1 // Opens a radio menu
1546.	radio2 // Opens a radio menu
1547.	radio3 // Opens a radio menu
1548.	rate "80000" // Max bytes/sec the host can receive data
1549.	rcon // Issue an rcon command.
1550.	rcon_address "0" // Address of remote server if sending unconnected rcon commands (format x.x.x.x:p)
1551.	rcon_password "0" // remote console password.
1552.	rebuy // Attempt to repurchase items with the order listed in cl_rebuy
1553.	recompute_speed // Recomputes clock speed (for debugging purposes).
1554.	record // Record a demo.
1555.	reload // Reload the most recent saved game (add setpos to jump to current view position on reload).
1556.	reload_vjobs // reload vjobs module
1557.	remote_bug // Starts a bug report with data from the currently connected rcon machine
1558.	removeallids // Remove all user IDs from the ban list.
1559.	removeid // Remove a user ID from the ban list.
1560.	removeip // Remove an IP address from the ban list.
1561.	render_blanks // render N blank frames
1562.	report_cliententitysim "0" // List all clientside simulations and time - will report and turn itself off.
1563.	report_clientthinklist "0" // List all clientside entities thinking and time - will report and turn itself off.
1564.	report_entities // Lists all entities
1565.	report_simthinklist // Lists all simulating/thinking entities
1566.	report_soundpatch // reports sound patch count
1567.	report_touchlinks // Lists all touchlinks
1568.	reset_expo // and end the round
1569.	reset_gameconvars // Reset a bunch of game convars to default values
1570.	respawn_entities // Respawn all the entities in the map.
1571.	restart // Restart the game on the same level (add setpos to jump to current view position on restart).
1572.	retry // Retry connection to last server.
1573.	rope_min_pixel_diameter "2"
1574.	rr_debugresponseconcept_exclude // Set a list of concepts to exclude from rr_debugresponseconcept. Separate multiple concepts with spaces. Call with no arguments
1575.	rr_followup_maxdist "1800" // then ANY or then ALL response followups will be dispatched only to characters within this distance.
1576.	rr_forceconcept // fire a response concept directly at a given character. USAGE: rr_forceconcept <target> <concept> criteria1:value1,criteria2:va
1577.	rr_reloadresponsesystems // Reload all response system scripts.
1578.	rr_remarkables_enabled "1" // polling for info_remarkables and issuances of TLK_REMARK is enabled.
1579.	rr_remarkable_max_distance "1200" // AIs will not even consider remarkarbles that are more than this many units away.
1580.	rr_remarkable_world_entities_replay_limit "1" // TLK_REMARKs will be dispatched no more than this many times for any given info_remarkable
1581.	rr_thenany_score_slop "0" // all rule-matching scores within this much of the best score will be considere
1582.	r_AirboatViewDampenDamp "1"
1583.	r_AirboatViewDampenFreq "7"
1584.	r_AirboatViewZHeight "0"
1585.	r_alphafade_usefov "1" // Account for FOV when computing an entitys distance-based alpha fade
1586.	r_ambientfraction "0" // Fraction of direct lighting used to boost lighting when model requests
1587.	r_ambientlightingonly "0" // Set this to 1 to light models with only ambient lighting (and no static lighting).
1588.	r_avglight "1"
1589.	r_avglightmap "0"
1590.	r_brush_queue_mode "0"
1591.	r_cheapwaterend
1592.	r_cheapwaterstart
1593.	r_cleardecals // Usage r_cleardecals <permanent>.
1594.	r_ClipAreaFrustums "1"
1595.	r_ClipAreaPortals "1"
1596.	r_colorstaticprops "0"
1597.	r_debugcheapwater "0"
1598.	r_debugrandomstaticlighting "0" // Set to 1 to randomize static lighting for debugging. Must restart for change to take affect.
1599.	r_depthoverlay "0" // Replaces opaque objects with their grayscaled depth values. r_showz_power scales the output.
1600.	r_disable_distance_fade_on_big_props "0" // Completely disable distance fading on large props
1601.	r_disable_distance_fade_on_big_props_thresh "48000" // Distance prop fade disable threshold size
1602.	r_disable_update_shadow "1"
1603.	r_DispBuildable "0"
1604.	r_DispWalkable "0"
1605.	r_dlightsenable "1"
1606.	r_drawallrenderables "0" // even ones inside solid leaves.
1607.	r_DrawBeams "1" // 2=Wireframe
1608.	r_drawbrushmodels "1" // 2=Wireframe
1609.	r_drawclipbrushes "0" // purple=NPC)
1610.	r_drawdecals "1" // Render decals.
1611.	r_DrawDisp "1" // Toggles rendering of displacment maps
1612.	r_drawentities "1"
1613.	r_drawfuncdetail "1" // Render func_detail
1614.	r_drawleaf "-1" // Draw the specified leaf.
1615.	r_drawlightcache "0" // 0: off 1: draw light cache entries 2: draw rays
1616.	r_drawlightinfo "0"
1617.	r_drawlights "0"
1618.	r_DrawModelLightOrigin "0"
1619.	r_drawmodelstatsoverlay "0"
1620.	r_drawmodelstatsoverlaydistance "500"
1621.	r_drawmodelstatsoverlayfilter "-1"
1622.	r_drawmodelstatsoverlaymax "1" // time in milliseconds beyond which a model overlay is fully red in r_drawmodelstatsoverlay 2
1623.	r_drawmodelstatsoverlaymin "0" // time in milliseconds that a model must take to render before showing an overlay in r_drawmodelstatsoverlay 2
1624.	r_drawopaquerenderables "1"
1625.	r_drawopaqueworld "1"
1626.	r_drawothermodels "1" // 2=Wireframe
1627.	r_drawparticles "1" // Enable/disable particle rendering
1628.	r_DrawPortals "0"
1629.	r_DrawRain "1" // Enable/disable rain rendering.
1630.	r_drawrenderboxes "0" // (0 - off) (1 - Draws the bounding box of entities) (2 - Draws the axis aligned bounding box used for culling) (3 - draws both b
1631.	r_drawropes "1"
1632.	r_drawscreenoverlay "0"
1633.	r_drawskybox "1"
1634.	r_drawsprites "1"
1635.	r_drawstaticprops "1" // 2=Wireframe
1636.	r_drawtracers "1"
1637.	r_drawtracers_firstperson "1" // Toggle visibility of first person weapon tracers
1638.	r_drawtracers_movetonotintersect "1"
1639.	r_drawtranslucentrenderables "1"
1640.	r_drawtranslucentworld "1"
1641.	r_drawunderwateroverlay "0"
1642.	r_drawvgui "1" // Enable the rendering of vgui panels
1643.	r_drawviewmodel "1"
1644.	r_drawworld "1" // Render the world.
1645.	r_dscale_basefov "90"
1646.	r_dscale_fardist "2000"
1647.	r_dscale_farscale "4"
1648.	r_dscale_neardist "100"
1649.	r_dscale_nearscale "1"
1650.	r_dynamic "1"
1651.	r_dynamiclighting "1"
1652.	r_eyegloss "1"
1653.	r_eyemove "1"
1654.	r_eyeshift_x "0"
1655.	r_eyeshift_y "0"
1656.	r_eyeshift_z "0"
1657.	r_eyesize "0"
1658.	r_eyewaterepsilon "7"
1659.	r_farz "-1" // Override the far clipping plane. -1 means to use the value in env_fog_controller.
1660.	r_flashlightambient "0"
1661.	r_flashlightbacktraceoffset "0"
1662.	r_flashlightbrightness "0"
1663.	r_flashlightclip "0"
1664.	r_flashlightconstant "0"
1665.	r_flashlightdrawclip "0"
1666.	r_flashlightfar "750"
1667.	r_flashlightfov "53"
1668.	r_flashlightladderdist "40"
1669.	r_flashlightlinear "100"
1670.	r_flashlightlockposition "0"
1671.	r_flashlightmuzzleflashfov "120"
1672.	r_flashlightnear "4"
1673.	r_flashlightnearoffsetscale "1"
1674.	r_flashlightoffsetforward "0"
1675.	r_flashlightoffsetright "5"
1676.	r_flashlightoffsetup "-5"
1677.	r_flashlightquadratic "0"
1678.	r_flashlightshadowatten "0"
1679.	r_flashlightvisualizetrace "0"
1680.	r_flushlod // Flush and reload LODs.
1681.	r_hwmorph "0"
1682.	r_itemblinkmax "0"
1683.	r_itemblinkrate "4"
1684.	r_JeepFOV "90"
1685.	r_JeepViewBlendTo "1"
1686.	r_JeepViewBlendToScale "0"
1687.	r_JeepViewBlendToTime "1"
1688.	r_JeepViewDampenDamp "1"
1689.	r_JeepViewDampenFreq "7"
1690.	r_JeepViewZHeight "10"
1691.	r_lightcachecenter "1"
1692.	r_lightcachemodel "-1"
1693.	r_lightcache_invalidate
1694.	r_lightcache_numambientsamples "162" // number of random directions to fire rays when computing ambient lighting
1695.	r_lightcache_radiusfactor "1000" // Allow lights to influence lightcaches beyond the lights radii
1696.	r_lightinterp "5" // 0 turns off interpolation
1697.	r_lightmap "-1"
1698.	r_lightstyle "-1"
1699.	r_lightwarpidentity "0"
1700.	r_lockpvs "0" // Lock the PVS so you can fly around and inspect what is being drawn.
1701.	r_mapextents "16384" // Set the max dimension for the map. This determines the far clipping plane
1702.	r_modelAmbientMin "0" // Minimum value for the ambient lighting on dynamic models with more than one bone (like players and their guns).
1703.	r_modelwireframedecal "0"
1704.	r_nohw "0"
1705.	r_nosw "0"
1706.	r_novis "0" // Turn off the PVS.
1707.	r_occlusionspew "0" // Activate/deactivates spew about what the occlusion system is doing.
1708.	r_oldlightselection "0" // Set this to revert to HL2s method of selecting lights
1709.	r_particle_demo "0"
1710.	r_partition_level "-1" // Displays a particular level of the spatial partition system. Use -1 to disable it.
1711.	r_portalsopenall "0" // Open all portals
1712.	r_PortalTestEnts "1" // Clip entities against portal frustums.
1713.	r_printdecalinfo
1714.	r_proplightingpooling "-1" // 1 - static prop color meshes are allocated from a single shared vertex buffer (on hardware that supports stream offset
1715.	r_radiosity "4" // 0: no radiosity 1: radiosity with ambient cube (6 samples) 2: radiosity with 162 samples 3: 162 samples for static props, 6 sam
1716.	r_rainalpha "0"
1717.	r_rainalphapow "0"
1718.	r_RainCheck "0" // Enable/disable IsInAir() check for rain drops?
1719.	r_RainDebugDuration "0" // Shows rain tracelines for this many seconds (0 disables)
1720.	r_raindensity "0"
1721.	r_RainHack "0"
1722.	r_rainlength "0"
1723.	r_RainProfile "0" // Enable/disable rain profiling.
1724.	r_RainRadius "1500"
1725.	r_RainSideVel "130" // How much sideways velocity rain gets.
1726.	r_RainSimulate "1" // Enable/disable rain simulation.
1727.	r_rainspeed "600"
1728.	r_RainSplashPercentage "20"
1729.	r_rainwidth "0"
1730.	r_randomflex "0"
1731.	r_rimlight "1"
1732.	r_ropes_holiday_light_color // Set each lights color: [light0-3] [r0-255] [g0-255] [b0-255]
1733.	r_screenoverlay // Draw specified material as an overlay
1734.	r_shadowangles // Set shadow angles
1735.	r_shadowblobbycutoff // some shadow stuff
1736.	r_shadowcolor // Set shadow color
1737.	r_shadowdir // Set shadow direction
1738.	r_shadowdist // Set shadow distance
1739.	r_shadowfromanyworldlight "0"
1740.	r_shadowfromworldlights_debug "0"
1741.	r_shadowids "0"
1742.	r_shadows_gamecontrol "-1"
1743.	r_shadowwireframe "0"
1744.	r_shadow_debug_spew "0"
1745.	r_shadow_deferred "0" // Toggle deferred shadow rendering
1746.	r_showenvcubemap "0"
1747.	r_showz_power "1"
1748.	r_skin "0"
1749.	r_skybox "1" // Enable the rendering of sky boxes
1750.	r_slowpathwireframe "0"
1751.	r_SnowDebugBox "0" // Snow Debug Boxes.
1752.	r_SnowEnable "1" // Snow Enable
1753.	r_SnowEndAlpha "255" // Snow.
1754.	r_SnowEndSize "0" // Snow.
1755.	r_SnowFallSpeed "1" // Snow fall speed scale.
1756.	r_SnowInsideRadius "256" // Snow.
1757.	r_SnowOutsideRadius "1024" // Snow.
1758.	r_SnowParticles "500" // Snow.
1759.	r_SnowPosScale "1" // Snow.
1760.	r_SnowRayEnable "1" // Snow.
1761.	r_SnowRayLength "8192" // Snow.
1762.	r_SnowRayRadius "256" // Snow.
1763.	r_SnowSpeedScale "1" // Snow.
1764.	r_SnowStartAlpha "25" // Snow.
1765.	r_SnowStartSize "1" // Snow.
1766.	r_SnowWindScale "0" // Snow.
1767.	r_SnowZoomOffset "384" // Snow.
1768.	r_SnowZoomRadius "512" // Snow.
1769.	r_swingflashlight "1"
1770.	r_updaterefracttexture "1"
1771.	r_vehicleBrakeRate "1"
1772.	r_VehicleViewClamp "1"
1773.	r_VehicleViewDampen "1"
1774.	r_visocclusion "0" // Activate/deactivate wireframe rendering of what the occlusion system is doing.
1775.	r_visualizelighttraces "0"
1776.	r_visualizelighttracesshowfulltrace "0"
1777.	r_visualizetraces "0"
1778.	safezonex "1" // The percentage of the screen width that is considered safe from overscan
1779.	safezoney "1" // The percentage of the screen height that is considered safe from overscan
1780.	save // Saves current game.
1781.	save_finish_async
1782.	say // Display player message
1783.	say_team // Display player message to team
1784.	scene_flush // Flush all .vcds from the cache and reload from disk.
1785.	scene_playvcd // Play the given VCD as an instanced scripted scene.
1786.	scene_showfaceto "0" // show the directions of faceto events.
1787.	scene_showlook "0" // show the directions of look events.
1788.	scene_showmoveto "0" // show the end location.
1789.	scene_showunlock "0" // Show when a vcd is playing but normal AI is running.
1790.	screenshot // Take a screenshot.
1791.	script // Run the text as a script
1792.	script_client // Run the text as a script
1793.	script_debug // Connect the vscript VM to the script debugger
1794.	script_debug_client // Connect the vscript VM to the script debugger
1795.	script_dump_all // Dump the state of the VM to the console
1796.	script_dump_all_client // Dump the state of the VM to the console
1797.	script_execute // Run a vscript file
1798.	script_execute_client // Run a vscript file
1799.	script_help // optionally with a search string
1800.	script_help_client // optionally with a search string
1801.	script_reload_code // replacing existing functions with the functions in the run script
1802.	script_reload_entity_code // replacing existing functions with the functions in the run scripts
1803.	script_reload_think // replacing existing functions with the functions in the run script
1804.	sensitivity "6" // Mouse sensitivity.
1805.	servercfgfile "0"
1806.	server_game_time // Gives the game time in seconds (servers curtime)
1807.	setang // Snap player eyes to specified pitch yaw <roll:optional> (must have sv_cheats).
1808.	setang_exact // Snap player eyes and orientation to specified pitch yaw <roll:optional> (must have sv_cheats).
1809.	setinfo // Adds a new user info value
1810.	setmaster // add/remove/enable/disable master servers
1811.	setmodel // Changess players model
1812.	setpause // Set the pause state of the server.
1813.	setpos // Move player to specified origin (must have sv_cheats).
1814.	setpos_exact // Move player to an exact specified origin (must have sv_cheats).
1815.	setpos_player // Move specified player to specified origin (must have sv_cheats).
1816.	sf4_meshcache_stats // Outputs Scaleform 4 mesh cache stats
1817.	sf_ui_tint "1" // The current tint applied to the Scaleform UI
1818.	shake // Shake the screen.
1819.	shake_stop // Stops all active screen shakes.
1820.	shake_testpunch // Test a punch-style screen shake.
1821.	showbudget_texture "0" // Enable the texture budget panel.
1822.	showbudget_texture_global_dumpstats // Dump all items in +showbudget_texture_global in a text form
1823.	showconsole // Show the console.
1824.	showinfo // Shows a info panel: <type> <title> <message> [<command number>]
1825.	showpanel // Shows a viewport panel <name>
1826.	showtriggers "0" // Shows trigger brushes
1827.	showtriggers_toggle // Toggle show triggers
1828.	show_loadout_toggle // Toggles loadout display
1829.	singlestep "0" // Run engine in single step mode ( set next to 1 to advance a frame )
1830.	skill "1" // Game skill level (1-3).
1831.	skip_next_map // Skips the next map in the map rotation for the server.
1832.	sk_autoaim_mode "1"
1833.	slot0
1834.	slot1
1835.	slot10
1836.	slot11
1837.	slot2
1838.	slot3
1839.	slot4
1840.	slot5
1841.	slot6
1842.	slot7
1843.	slot8
1844.	slot9
1845.	snapto
1846.	sndplaydelay
1847.	snd_async_flush // Flush all unlocked async audio data
1848.	snd_async_showmem // Show async memory stats
1849.	snd_async_showmem_music // Show async memory stats for just non-streamed music
1850.	snd_async_showmem_summary // Show brief async memory stats
1851.	snd_debug_panlaw "0" // Visualize panning crossfade curves
1852.	snd_disable_mixer_duck "0"
1853.	snd_disable_mixer_solo "0"
1854.	snd_duckerattacktime "0"
1855.	snd_duckerreleasetime "2"
1856.	snd_duckerthreshold "0"
1857.	snd_ducking_off "1"
1858.	snd_ducktovolume "0"
1859.	snd_dumpclientsounds // Dump sounds to console
1860.	snd_dump_filepaths
1861.	snd_dvar_dist_max "1320" // Play full far sound at this distance
1862.	snd_dvar_dist_min "240" // Play full near sound at this distance
1863.	snd_filter "0"
1864.	snd_foliage_db_loss "4" // foliage dB loss per 1200 units
1865.	snd_front_headphone_position // Specifies the position (in degrees) of the virtual front left/right headphones.
1866.	snd_front_stereo_speaker_position // Specifies the position (in degrees) of the virtual front left/right speakers.
1867.	snd_front_surround_speaker_position // Specifies the position (in degrees) of the virtual front left/right speakers.
1868.	snd_gain "1"
1869.	snd_gain_max "1"
1870.	snd_gain_min "0"
1871.	snd_getmixer // Get data related to mix group matching string
1872.	snd_headphone_pan_exponent // Specifies the exponent for the pan xfade from phone to phone if the exp pan law is being used.
1873.	snd_headphone_pan_radial_weight // Apply cos(angle) * weight before pan law
1874.	snd_legacy_surround "0"
1875.	snd_list "0"
1876.	snd_max_same_sounds "4"
1877.	snd_max_same_weapon_sounds "3"
1878.	snd_mixahead "0"
1879.	snd_mixer_master_dsp "1"
1880.	snd_mixer_master_level "1"
1881.	snd_musicvolume "0" // Music volume
1882.	snd_musicvolume_multiplier_inoverlay "0" // Music volume multiplier when Steam Overlay is active
1883.	snd_music_selection "2" // Temporary convar to choose which music kit to use for this player.
1884.	snd_mute_losefocus "1"
1885.	snd_obscured_gain_dB "-2"
1886.	snd_op_test_convar "1"
1887.	snd_pause_all "1" // Specifies to pause all sounds and not just voice
1888.	snd_pitchquality "1"
1889.	snd_playsounds // Play sounds from the game sounds txt file at a given location
1890.	snd_prefetch_common "1" // Prefetch common sounds from directories specified in scripts/sound_prefetch.txt
1891.	snd_pre_gain_dist_falloff "1"
1892.	snd_print_channels // Prints all the active channel.
1893.	snd_print_channel_by_guid // Prints the content of a channel from its guid. snd_print_channel_by_guid <guid>.
1894.	snd_print_channel_by_index // Prints the content of a channel from its index. snd_print_channel_by_index <index>.
1895.	snd_print_dsp_effect // Prints the content of a dsp effect.
1896.	snd_rear_headphone_position // Specifies the position (in degrees) of the virtual rear left/right headphones.
1897.	snd_rear_speaker_scale "1" // How much to scale rear speaker contribution to front stereo output
1898.	snd_rear_stereo_speaker_position // Specifies the position (in degrees) of the virtual rear left/right speakers.
1899.	snd_rear_surround_speaker_position // Specifies the position (in degrees) of the virtual rear left/right speakers.
1900.	snd_rebuildaudiocache // rebuild audio cache for current language
1901.	snd_refdb "60" // Reference dB at snd_refdist
1902.	snd_refdist "36" // Reference distance for snd_refdb
1903.	snd_report_format_sound "0" // report all sound formats.
1904.	snd_report_loop_sound "0" // report all sounds that just looped.
1905.	snd_report_start_sound "0" // report all sounds played with S_StartSound(). The sound may not end up being played (if error occurred for example
1906.	snd_report_stop_sound "0" // report all sounds stopped with S_StopSound().
1907.	snd_report_verbose_error "0" // report more error found when playing sounds.
1908.	snd_restart // Restart sound system.
1909.	snd_setmixer // solo.
1910.	snd_setmixlayer // solo.
1911.	snd_setmixlayer_amount // Set named mix layer mix amount.
1912.	snd_setsoundparam // Set a sound paramater
1913.	snd_set_master_volume // Sets the master volume for a channel. snd_set_master_volume <guid> <mastervolume>.
1914.	snd_show "0" // Show sounds info
1915.	snd_showclassname "0"
1916.	snd_showmixer "0"
1917.	snd_showstart "0"
1918.	snd_sos_flush_operators // Flush and re-parse the sound operator system
1919.	snd_sos_list_operator_updates "0"
1920.	snd_sos_print_operators // Prints a list of currently available operators
1921.	snd_sos_show_block_debug "0" // Spew data about the list of block entries.
1922.	snd_sos_show_client_rcv "0"
1923.	snd_sos_show_client_xmit "0"
1924.	snd_sos_show_operator_entry_filter "0"
1925.	snd_sos_show_operator_init "0"
1926.	snd_sos_show_operator_parse "0"
1927.	snd_sos_show_operator_prestart "0"
1928.	snd_sos_show_operator_shutdown "0"
1929.	snd_sos_show_operator_start "0"
1930.	snd_sos_show_operator_stop_entry "0"
1931.	snd_sos_show_operator_updates "0"
1932.	snd_sos_show_queuetotrack "0"
1933.	snd_sos_show_server_xmit "0"
1934.	snd_sos_show_startqueue "0"
1935.	snd_soundmixer_flush // Reload soundmixers.txt file.
1936.	snd_soundmixer_list_mixers // List all mixers to dev console.
1937.	snd_soundmixer_list_mix_groups // List all mix groups to dev console.
1938.	snd_soundmixer_list_mix_layers // List all mix layers to dev console.
1939.	snd_soundmixer_set_trigger_factor // trigger amount.
1940.	snd_stereo_speaker_pan_exponent // Specifies the exponent for the pan xfade from speaker to speaker if the exp pan law is being used.
1941.	snd_stereo_speaker_pan_radial_weight // Apply cos(angle) * weight before pan law
1942.	snd_surround_speaker_pan_exponent // Specifies the exponent for the pan xfade from speaker to speaker if the exp pan law is being used.
1943.	snd_surround_speaker_pan_radial_weight // Apply cos(angle) * weight before pan law
1944.	snd_updateaudiocache // checks _master.cache based on file sizes and rebuilds any change/new entries
1945.	snd_visualize "0" // Show sounds location in world
1946.	snd_writemanifest // outputs the precache manifest for the current level
1947.	soundfade // Fade client volume.
1948.	soundinfo // Describe the current sound device.
1949.	soundlist // List all known sounds.
1950.	soundscape_debug "0" // red lines show soundscapes that ar
1951.	soundscape_dumpclient // Dumps the clients soundscape data.
1952.	soundscape_fadetime "3" // Time to crossfade sound effects between soundscapes
1953.	soundscape_flush // Flushes the server & client side soundscapes
1954.	soundscape_radius_debug "0" // Prints current volume of radius sounds
1955.	speak // Play a constructed sentence.
1956.	spec_allow_roaming "0" // allow free-roaming spectator camera.
1957.	spec_freeze_cinematiclight_b "1"
1958.	spec_freeze_cinematiclight_g "1"
1959.	spec_freeze_cinematiclight_r "1"
1960.	spec_freeze_cinematiclight_scale "2"
1961.	spec_freeze_deathanim_time "0" // The time that the death cam will spend watching the players ragdoll before going into the freeze death cam.
1962.	spec_freeze_distance_max "80" // Maximum random distance from the target to stop when framing them in observer freeze cam.
1963.	spec_freeze_distance_min "60" // Minimum random distance from the target to stop when framing them in observer freeze cam.
1964.	spec_freeze_panel_extended_time "0" // Time spent with the freeze panel still up after observer freeze cam is done.
1965.	spec_freeze_target_fov "42" // The target FOV that the deathcam should use.
1966.	spec_freeze_target_fov_long "90" // The target FOV that the deathcam should use when the cam zoom far away on the target.
1967.	spec_freeze_time "5" // Time spend frozen in observer freeze cam.
1968.	spec_freeze_time_lock "2" // Time players are prevented from skipping the freeze cam
1969.	spec_freeze_traveltime "0" // Time taken to zoom in to frame a target in observer freeze cam.
1970.	spec_freeze_traveltime_long "0" // Time taken to zoom in to frame a target in observer freeze cam when they are far away.
1971.	spec_goto // Move spectator to specified origin and eyes to specified pitch yaw.
1972.	spec_gui // Shows or hides the spectator bar
1973.	spec_hide_players "0" // Toggle the visibility of scoreboard players.
1974.	spec_lerpto // Lerp the spectator camera to specified origin and eyes to specified pitch yaw.
1975.	spec_menu // Activates spectator menu
1976.	spec_mode // Set spectator mode
1977.	spec_next // Spectate next player
1978.	spec_player // Spectate player by index
1979.	spec_player_by_name // Spectate player by name
1980.	spec_pos // dump position and angles to the console
1981.	spec_prev // Spectate previous player ( valid values are 3 to 6 )
1982.	spec_show_xray "1" // you can see player outlines and name IDs through walls - who you can see depends on your team and mode
1983.	spike // generates a fake spike
1984.	spincycle // Cause the engine to spincycle (Debug!!)
1985.	ss_enable "0" // Enables Split Screen support. Play Single Player now launches into split screen mode. NO ONLINE SUPPORT
1986.	ss_map // Start playing on specified map with max allowed splitscreen players.
1987.	ss_reloadletterbox // ss_reloadletterbox
1988.	ss_splitmode "0" // 2 - vertical (only allowed in widescr
1989.	startdemos // Play demos in demo sequence.
1990.	startmovie // Start recording movie frames.
1991.	startupmenu // and were not in developer
1992.	star_memory // Dump memory stats
1993.	stats // Prints server performance variables
1994.	status // Display map and connection status.
1995.	stop // Finish recording demo.
1996.	stopdemo // Stop playing back a demo.
1997.	stopsound
1998.	stopsoundscape // Stops all soundscape processing and fades current looping sounds
1999.	stopvideos // Stops all videos playing to the screen
2000.	stopvideos_fadeout // Fades out all videos playing to the screen: <time>
2001.	stop_transition_videos_fadeout // Fades out all transition videos playing to the screen: <time>
2002.	stringtabledictionary // Create dictionary for current strings.
2003.	stuffcmds // Parses and stuffs command line + commands to command buffer.
2004.	suitvolume "0"
2005.	surfaceprop // Reports the surface properties at the cursor
2006.	sv_accelerate "5" // Linear acceleration amount (old value is 5.6)
2007.	sv_accelerate_debug_speed "0"
2008.	sv_accelerate_use_weapon_speed "1"
2009.	sv_airaccelerate "12"
2010.	sv_allow_votes "1" // Allow voting?
2011.	sv_allow_wait_command "1" // Allow or disallow the wait command on clients connected to this server.
2012.	sv_alltalk "0" // chat)
2013.	sv_alternateticks "0" // server only simulates entities on even numbered ticks.
2014.	sv_arms_race_vote_to_restart_disallowed_after "0" // Arms Race gun level after which vote to restart is disallowed
2015.	sv_benchmark_force_start // Force start the benchmark. This is only for debugging. Its better to set sv_benchmark to 1 and restart the level.
2016.	sv_bounce "0" // Bounce multiplier for when physically simulated objects collide with other objects.
2017.	sv_broadcast_ugc_downloads "1"
2018.	sv_broadcast_ugc_download_progress_interval "4"
2019.	sv_cheats "0" // Allow cheats on server
2020.	sv_clearhinthistory // Clear memory of server side hints displayed to the player.
2021.	sv_client_cmdrate_difference "20" // cl_cmdrate is moved to within sv_client_cmdrate_difference units of cl_updaterate before it is clamped between sv_mincmdrate an
2022.	sv_clockcorrection_msecs "30" // The server tries to keep each players m_nTickBase withing this many msecs of the server absolute tickcount
2023.	sv_coaching_enabled "0" // Allows spectating and communicating with a team ( coach t or coach ct )
2024.	sv_competitive_minspec "1" // Enable to force certain client convars to minimum/maximum values to help prevent competitive advantages.
2025.	sv_competitive_official_5v5 "0" // Enable to force the server to show 5v5 scoreboards and allows spectators to see characters through walls.
2026.	sv_consistency "0" // Whether the server enforces file consistency for critical files
2027.	sv_contact "0" // Contact email for server sysop
2028.	sv_cs_dump_econ_item_stringtable // sv_cs_dump_econ_item_stringtable
2029.	sv_damage_print_enable "1" // Turn this off to disable the players damage feed in the console after getting killed.
2030.	sv_dc_friends_reqd "0" // Set this to 0 to allow direct connects to a game in progress even if no presents are present
2031.	sv_deadtalk "0" // text) to the living
2032.	sv_debug_ugc_downloads "1"
2033.	sv_downloadurl "0" // Location from which clients can download missing files
2034.	sv_dumpstringtables "0"
2035.	sv_dump_serialized_entities_mem // Dump serialized entity allocations stats.
2036.	sv_footstep_sound_frequency "0" // How frequent to hear the players step sound or how fast they appear to be running from first person.
2037.	sv_forcepreload "1" // Force server side preloading.
2038.	sv_force_transmit_players "1" // Will transmit players to all clients regardless of PVS checks.
2039.	sv_friction "4" // World friction.
2040.	sv_full_alltalk "0" // Any player (including Spectator team) can speak to any other player
2041.	sv_gameinstructor_disable "0" // Force all clients to disable their game instructors.
2042.	sv_game_mode_convars // Display the values of the convars for the current game_mode.
2043.	sv_gravity "800" // World gravity.
2044.	sv_grenade_trajectory "0" // Shows grenade trajectory visualization in-game.
2045.	sv_grenade_trajectory_dash "0" // Dot-dash style grenade trajectory arc
2046.	sv_grenade_trajectory_thickness "0" // Visible thickness of grenade trajectory arc
2047.	sv_grenade_trajectory_time "20" // Length of time grenade trajectory remains visible.
2048.	sv_grenade_trajectory_time_spectator "4" // Length of time grenade trajectory remains visible as a spectator.
2049.	sv_hibernate_ms "20" // # of milliseconds to sleep per frame while hibernating
2050.	sv_hibernate_ms_vgui "20" // # of milliseconds to sleep per frame while hibernating but running the vgui dedicated server frontend
2051.	sv_hibernate_postgame_delay "5" // # of seconds to wait after final client leaves before hibernating.
2052.	sv_hibernate_punt_tv_clients "0" // When enabled will punt all GOTV clients during hibernation
2053.	sv_hibernate_when_empty "1" // Puts the server into extremely low CPU usage mode when no clients connected
2054.	sv_ignoregrenaderadio "0" // Turn off Fire in the hole messages
2055.	sv_infinite_ammo "0" // Players active weapon will never run out of ammo. If set to 2 then player has infinite total ammo but still has to reload the
2056.	sv_kick_ban_duration "15" // How long should a kick ban from the server should last (in minutes)
2057.	sv_kick_players_with_cooldown "1" // (0: do not kick; 1: kick players with Untrusted status or convicted by Overwatch; 2: kick players with any cooldown)
2058.	sv_lagcompensationforcerestore "1" // just do it.
2059.	sv_lan "0" // no non-class C addresses )
2060.	sv_logbans "0" // Log server bans in the server logs.
2061.	sv_logecho "1" // Echo log information to the console.
2062.	sv_logfile "1" // Log server information in the log file.
2063.	sv_logflush "0" // Flush the log file to disk on each write (slow).
2064.	sv_logsdir "0" // Folder in the game directory where server logs will be stored.
2065.	sv_log_onefile "0" // Log server information to only one file.
2066.	sv_matchend_drops_enabled "1" // but drops at the end of the match can be prevented
2067.	sv_matchpause_auto_5v5 "0" // When enabled will automatically pause the match at next freeze time if less than 5 players are connected on each team.
2068.	sv_maxrate "0" // 0 == unlimited
2069.	sv_maxspeed "320"
2070.	sv_maxuptimelimit "0" // the server will exit.
2071.	sv_maxusrcmdprocessticks "16" // 0 to allow no restrictions
2072.	sv_maxusrcmdprocessticks_warning "-1" // negat
2073.	sv_maxvelocity "3500" // Maximum speed any ballistically moving object is allowed to attain per axis.
2074.	sv_memlimit "0" // the server will exit.
2075.	sv_mincmdrate "10" // This sets the minimum value for cl_cmdrate. 0 == unlimited.
2076.	sv_minrate "5000" // 0 == unlimited
2077.	sv_minupdaterate "10" // Minimum updates per second that the server will allow
2078.	sv_minuptimelimit "0" // the server will continue running regardle
2079.	sv_noclipaccelerate "5"
2080.	sv_noclipduringpause "0" // etc.).
2081.	sv_noclipspeed "5"
2082.	sv_password "0" // Server password for entry into multiplayer games
2083.	sv_pausable "0" // Is the server pausable.
2084.	sv_precacheinfo // Show precache info.
2085.	sv_pure // Show user data.
2086.	sv_pure_checkvpk // CheckPureServerVPKFiles
2087.	sv_pure_consensus "100000000" // Minimum number of file hashes to agree to form a consensus.
2088.	sv_pure_finduserfiles // ListPureServerFiles
2089.	sv_pure_kick_clients "1" // it will issue a warning to the client.
2090.	sv_pure_listfiles // ListPureServerFiles
2091.	sv_pure_listuserfiles // ListPureServerFiles
2092.	sv_pure_retiretime "900" // Seconds of server idle time to flush the sv_pure file hash cache.
2093.	sv_pure_trace "0" // the server will print a message whenever a client is verifying a CRC for a file.
2094.	sv_pushaway_hostage_force "20000" // How hard the hostage is pushed away from physics objects (falls off with inverse square of distance).
2095.	sv_pushaway_max_hostage_force "1000" // Maximum of how hard the hostage is pushed away from physics objects.
2096.	sv_pvsskipanimation "1" // Skips SetupBones when npcs are outside the PVS
2097.	sv_querycache_stats // Display status of the query cache (client only)
2098.	sv_quota_stringcmdspersecond "128" // 0 to disallow all string commands
2099.	sv_rcon_whitelist_address "0" // e.g. 127.0.0.1
2100.	sv_regeneration_force_on "0" // Cheat to test regenerative health systems
2101.	sv_region "-1" // The region of the world to report this server in.
2102.	sv_remove_old_ugc_downloads "1"
2103.	sv_reservation_tickrate_adjustment "0" // Adjust server tickrate upon reservation
2104.	sv_reservation_timeout "45" // Time in seconds before lobby reservation expires.
2105.	sv_search_key "0" // restrict search to only dedicated servers having the same sv_search_key.
2106.	sv_search_team_key "0" // set this key to match with known opponents team
2107.	sv_showimpacts "0" // 3=server-only)
2108.	sv_showimpacts_time "4" // Duration bullet impact indicators remain before disappearing
2109.	sv_showlagcompensation "0" // Show lag compensated hitboxes whenever a player is lag compensated.
2110.	sv_showtags // Describe current gametags.
2111.	sv_shutdown // Sets the server to shutdown when all games have completed
2112.	sv_skyname "0" // Current name of the skybox texture
2113.	sv_soundemitter_reload // Flushes the sounds.txt system
2114.	sv_soundscape_printdebuginfo // print soundscapes
2115.	sv_spawn_afk_bomb_drop_time "15" // Players that have never moved since they spawned will drop the bomb after this amount of time.
2116.	sv_specaccelerate "5"
2117.	sv_specnoclip "1"
2118.	sv_specspeed "3"
2119.	sv_spec_hear "1" // Determines who spectators can hear: 0: only spectators; 1: all players; 2: spectated team
2120.	sv_staminajumpcost "0" // Stamina penalty for jumping
2121.	sv_staminalandcost "0" // Stamina penalty for landing
2122.	sv_staminamax "80" // Maximum stamina penalty
2123.	sv_staminarecoveryrate "60" // Rate at which stamina recovers (units/sec)
2124.	sv_steamgroup "0" // The ID of the steam group that this server belongs to. You can find your groups ID on the admin profile page in the steam comm
2125.	sv_steamgroup_exclusive "0" // public people will be able to join the ser
2126.	sv_stopspeed "75" // Minimum stopping speed when on ground.
2127.	sv_tags "0" // Server tags. Used to provide extra information to clients when theyre browsing for servers. Separate tags with a comma.
2128.	sv_ugc_manager_max_new_file_check_interval_secs "600"
2129.	sv_unlockedchapters "1" // Highest unlocked game chapter.
2130.	sv_visiblemaxplayers "-1" // Overrides the max players reported to prospective clients
2131.	sv_voiceenable "1"
2132.	sv_vote_allow_in_warmup "0" // Allow voting during warmup?
2133.	sv_vote_allow_spectators "0" // Allow spectators to vote?
2134.	sv_vote_command_delay "2" // How long after a vote passes until the action happens
2135.	sv_vote_creation_timer "120" // How often someone can individually call a vote.
2136.	sv_vote_failure_timer "300" // A vote that fails cannot be re-submitted for this long
2137.	sv_vote_issue_kick_allowed "1" // Can people hold votes to kick players from the server?
2138.	sv_vote_kick_ban_duration "15" // How long should a kick vote ban someone from the server? (in minutes)
2139.	sv_vote_quorum_ratio "0" // The minimum ratio of players needed to vote on an issue to resolve it.
2140.	sv_vote_timer_duration "15" // How long to allow voting on an issue
2141.	sv_workshop_allow_other_maps "1" // users can play other workshop map on this server when it is empty and then mapcycle into th
2142.	sys_antialiasing "1" // Convar used exclusively by the options screen to set anti aliasing levels. Changing this convar manually will have no effect.
2143.	sys_aspectratio "-1" // Convar used exclusively by the options screen to set aspect ratio. Changing this convar manually will have no effect.
2144.	sys_minidumpspewlines "500" // Lines of crash dump console spew to keep.
2145.	sys_refldetail "0" // Convar used exclusively by the options screen to set water reflection levels. Changing this convar manually will have no effect
2146.	sys_sound_quality "-1" // Convar used exclusively by the options screen to set sound quality. Changing this convar manually will have no effect.
2147.	teammenu // Show team selection window
2148.	testhudanim // Test a hud element animation. Arguments: <anim name>
2149.	Test_CreateEntity
2150.	test_dispatcheffect // Test a clientside dispatch effect. Usage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale> Defau
2151.	Test_EHandle
2152.	test_entity_blocker // Test command that drops an entity blocker out in front of the player.
2153.	test_freezeframe // Test the freeze frame code.
2154.	Test_InitRandomEntitySpawner
2155.	Test_Loop // Test_Loop <loop name> - loop back to the specified loop start point unconditionally.
2156.	Test_LoopCount // Test_LoopCount <loop name> <count> - loop back to the specified loop start point the specified # of times.
2157.	Test_LoopForNumSeconds // Test_LoopForNumSeconds <loop name> <time> - loop back to the specified start point for the specified # of seconds.
2158.	test_outtro_stats
2159.	Test_ProxyToggle_EnableProxy
2160.	Test_ProxyToggle_EnsureValue // Test_ProxyToggle_EnsureValue
2161.	Test_ProxyToggle_SetValue
2162.	Test_RandomChance // 0-100> <token1> <token2...> - Roll the dice and maybe run the command following the percenta
2163.	Test_RandomizeInPVS
2164.	Test_RandomPlayerPosition
2165.	Test_RemoveAllRandomEntities
2166.	Test_RunFrame
2167.	Test_SendKey
2168.	Test_SpawnRandomEntities
2169.	Test_StartLoop // Test_StartLoop <loop name> - Denote the start of a loop. Really just defines a named point you can jump to.
2170.	Test_StartScript // Start a test script running..
2171.	Test_Wait
2172.	Test_WaitForCheckPoint
2173.	texture_budget_background_alpha "128" // how translucent the budget panel is
2174.	texture_budget_panel_bottom_of_history_fraction "0" // number between 0 and 1
2175.	texture_budget_panel_height "284" // height in pixels of the budget panel
2176.	texture_budget_panel_width "512" // width in pixels of the budget panel
2177.	texture_budget_panel_x "0" // number of pixels from the left side of the game screen to draw the budget panel
2178.	texture_budget_panel_y "450" // number of pixels from the top side of the game screen to draw the budget panel
2179.	think_limit "10" // warning is printed if this is exceeded.
2180.	thirdperson_mayamode // Switch to thirdperson Maya-like camera controls.
2181.	threadpool_cycle_reserve // Cycles threadpool reservation by powers of 2
2182.	threadpool_run_tests
2183.	thread_test_tslist
2184.	thread_test_tsqueue
2185.	timedemo // Play a demo and report performance info.
2186.	timedemoquit // and then exit
2187.	timedemo_vprofrecord // Play a demo and report performance info. Also record vprof data for the span of the demo
2188.	timeleft // prints the time remaining in the match
2189.	timerefresh // Profile the renderer.
2190.	toggle // or cycles through a set of values.
2191.	toggleconsole // Show/hide the console.
2192.	toggleLmapPath // toggleLmapPath
2193.	togglescores // Toggles score panel
2194.	toggleShadowPath // Toggles CSM generation method
2195.	toggleUnlitPath // toggleUnlitPath
2196.	toggleVtxLitPath // toggleVtxLitPath
2197.	toolload // Load a tool.
2198.	toolunload // Unload a tool.
2199.	tv_advertise_watchable "0" // clients watching via UI will not need to type password
2200.	tv_allow_camera_man "1" // Auto director allows spectators to become camera man
2201.	tv_allow_static_shots "1" // Auto director uses fixed level cameras for shots
2202.	tv_autorecord "0" // Automatically records all games as GOTV demos.
2203.	tv_autoretry "1" // Relay proxies retry connection after network timeout
2204.	tv_chatgroupsize "0" // Set the default chat group size
2205.	tv_chattimelimit "8" // Limits spectators to chat only every n seconds
2206.	tv_clients // Shows list of connected GOTV clients.
2207.	tv_debug "0" // GOTV debug info.
2208.	tv_delay "10" // GOTV broadcast delay in seconds
2209.	tv_delaymapchange "1" // Delays map change until broadcast is complete
2210.	tv_deltacache "2" // Enable delta entity bit stream cache
2211.	tv_dispatchmode "1" // 2=always
2212.	tv_dispatchweight "1" // 1.25 will prefer for every 4 local clients to put 5 clients on every connected
2213.	tv_enable "0" // Activates GOTV on server (0=off;1=on;2=on when reserved)
2214.	tv_encryptdata_key "0" // When set to a valid key communication messages will be encrypted for GOTV
2215.	tv_encryptdata_key_pub "0" // When set to a valid key public communication messages will be encrypted for GOTV
2216.	tv_maxclients "128" // Maximum client number on GOTV server.
2217.	tv_maxclients_relayreserved "0" // Reserves a certain number of GOTV client slots for relays.
2218.	tv_maxrate "20000" // 0 == unlimited
2219.	tv_msg // Send a screen message to all clients.
2220.	tv_name "0" // GOTV host name
2221.	tv_nochat "0" // Dont receive chat messages from other GOTV spectators
2222.	tv_overridemaster "0" // Overrides the GOTV master root address.
2223.	tv_password "0" // GOTV password for all clients
2224.	tv_port "27020" // Host GOTV port
2225.	tv_record // Starts GOTV demo recording.
2226.	tv_relay // Connect to GOTV server and relay broadcast.
2227.	tv_relaypassword "0" // GOTV password for relay proxies
2228.	tv_relayradio "0" // 1=on
2229.	tv_relaytextchat "1" // 2=say+say_team
2230.	tv_relayvoice "1" // 1=on
2231.	tv_retry // Reconnects the GOTV relay proxy.
2232.	tv_snapshotrate "16" // Snapshots broadcasted per second
2233.	tv_status // Show GOTV server status.
2234.	tv_stop // Stops the GOTV broadcast.
2235.	tv_stoprecord // Stops GOTV demo recording.
2236.	tv_timeout "30" // GOTV connection timeout in seconds.
2237.	tv_time_remaining // Print remaining tv broadcast time
2238.	tv_title "0" // Set title for GOTV spectator UI
2239.	tv_transmitall "1" // Transmit all entities (not only director view)
2240.	tweak_ammo_impulses // Allow real-time tweaking of the ammo impulse values.
2241.	ui_posedebug_fade_in_time "0" // Time during which a new pose activity layer is shown in green in +posedebug UI
2242.	ui_posedebug_fade_out_time "0" // Time to keep a no longer active pose activity layer in red until removing it from +posedebug UI
2243.	ui_reloadscheme // Reloads the resource files for the active UI window
2244.	ui_steam_overlay_notification_position "0" // Steam overlay notification position
2245.	ui_workshop_games_expire_minutes "3"
2246.	unbind // Unbind a key.
2247.	unbindall // Unbind all keys.
2248.	unbindalljoystick // Unbind all joystick keys.
2249.	unbindallmousekeyboard // Unbind all mouse / keyboard keys.
2250.	unload_all_addons // Reloads the search paths for game addons.
2251.	unpause // Unpause the game.
2252.	update_addon_paths // Reloads the search paths for game addons.
2253.	use // Use a particular weapon Arguments: <weapon_name>
2254.	user // Show user data.
2255.	users // Show user info for players on server.
2256.	vcollide_wireframe "0" // Render physics collision models in wireframe
2257.	vehicle_flushscript // Flush and reload all vehicle scripts
2258.	version // Print version info string.
2259.	vgui_drawtree "0" // Draws the vgui panel hiearchy to the specified depth level.
2260.	vgui_drawtree_clear
2261.	vgui_dump_panels // vgui_dump_panels [visible]
2262.	vgui_message_dialog_modal "1"
2263.	vgui_spew_fonts
2264.	vgui_togglepanel // show/hide vgui panel by name.
2265.	viewanim_addkeyframe
2266.	viewanim_create // viewanim_create
2267.	viewanim_load // load animation from file
2268.	viewanim_reset // reset view angles!
2269.	viewanim_save // Save current animation to file
2270.	viewanim_test // test view animation
2271.	viewmodel_fov "60"
2272.	viewmodel_offset_x "1"
2273.	viewmodel_offset_y "1"
2274.	viewmodel_offset_z "-1"
2275.	viewmodel_presetpos "1" // 3:Classic
2276.	view_punch_decay "18" // Decay factor exponent for view punch
2277.	view_recoil_tracking "0" // How closely the view tracks with the aim punch from weapon recoil
2278.	vismon_poll_frequency "0"
2279.	vismon_trace_limit "12"
2280.	vis_force "0"
2281.	vm_debug "0"
2282.	vm_draw_always "0" // 2 - Never draw view models. Should be done before map launches.
2283.	voicerecord_toggle
2284.	voice_enable "1" // Toggle voice transmit and receive.
2285.	voice_forcemicrecord "1"
2286.	voice_inputfromfile "0" // Get voice input from voice_input.wav rather than from the microphone.
2287.	voice_loopback "0"
2288.	voice_mixer_boost "0"
2289.	voice_mixer_mute "0"
2290.	voice_mixer_volume "1"
2291.	voice_modenable "1" // Enable/disable voice in this mod.
2292.	voice_mute // Mute a specific Steam user
2293.	voice_player_speaking_delay_threshold "0"
2294.	voice_recordtofile "0" // Record mic data and decompressed voice data into voice_micdata.wav and voice_decompressed.wav
2295.	voice_reset_mutelist // Reset all mute information for all players who were ever muted.
2296.	voice_scale "1"
2297.	voice_show_mute // Show whether current players are muted.
2298.	voice_threshold "2000"
2299.	voice_unmute // or `all` to unmute all connected players.
2300.	volume "0" // Sound volume
2301.	voxeltree_box // Vector(max)>.
2302.	voxeltree_playerview // View entities in the voxel-tree at the player position.
2303.	voxeltree_sphere // float(radius)>.
2304.	voxeltree_view // View entities in the voxel-tree.
2305.	vox_reload // Reload sentences.txt file
2306.	vphys_sleep_timeout // set sleep timeout: large values mean stuff wont ever sleep
2307.	vprof // Toggle VProf profiler
2308.	vprof_adddebuggroup1 // add a new budget group dynamically for debugging
2309.	vprof_cachemiss // Toggle VProf cache miss checking
2310.	vprof_cachemiss_off // Turn off VProf cache miss checking
2311.	vprof_cachemiss_on // Turn on VProf cache miss checking
2312.	vprof_child
2313.	vprof_collapse_all // Collapse the whole vprof tree
2314.	vprof_dump_counters // Dump vprof counters to the console
2315.	vprof_dump_groupnames // Write the names of all of the vprof groups to the console.
2316.	vprof_expand_all // Expand the whole vprof tree
2317.	vprof_expand_group // Expand a budget group in the vprof tree by name
2318.	vprof_generate_report // Generate a report to the console.
2319.	vprof_generate_report_AI // Generate a report to the console.
2320.	vprof_generate_report_AI_only // Generate a report to the console.
2321.	vprof_generate_report_budget // Generate a report to the console based on budget group.
2322.	vprof_generate_report_hierarchy // Generate a report to the console.
2323.	vprof_generate_report_hierarchy_per_frame_and_count_only // Generate a minimal hiearchical report to the console.
2324.	vprof_generate_report_map_load // Generate a report to the console.
2325.	vprof_graphheight "256"
2326.	vprof_graphwidth "512"
2327.	vprof_nextsibling
2328.	vprof_off // Turn off VProf profiler
2329.	vprof_on // Turn on VProf profiler
2330.	vprof_parent
2331.	vprof_playback_average // Average the next N frames.
2332.	vprof_playback_start // Start playing back a recorded .vprof file.
2333.	vprof_playback_step // step to the next tick.
2334.	vprof_playback_stepback // step to the previous tick.
2335.	vprof_playback_stop // Stop playing back a recorded .vprof file.
2336.	vprof_prevsibling
2337.	vprof_record_start // Start recording vprof data for playback later.
2338.	vprof_record_stop // Stop recording vprof data
2339.	vprof_remote_start // Request a VProf data stream from the remote server (requires authentication)
2340.	vprof_remote_stop // Stop an existing remote VProf data request
2341.	vprof_reset // Reset the stats in VProf profiler
2342.	vprof_reset_peaks // Reset just the peak time in VProf profiler
2343.	vprof_to_csv // Convert a recorded .vprof file to .csv.
2344.	vprof_unaccounted_limit "0" // number of milliseconds that a node must exceed to turn red in the vprof panel
2345.	vprof_verbose "1" // Set to one to show average and peak times
2346.	vprof_vtune_group // enable vtune for a particular vprof group (disable to disable)
2347.	vprof_warningmsec "10" // Above this many milliseconds render the label red to indicate slow code.
2348.	vtune // Controls VTunes sampling.
2349.	vx_model_list // Dump models to VXConsole
2350.	wc_air_edit_further // moves position of air node crosshair and placement location further away from play
2351.	wc_air_edit_nearer // moves position of air node crosshair and placement location nearer to from player
2352.	wc_air_node_edit // toggles laying down or air nodes instead of ground nodes
2353.	wc_create // creates a node where the player is looking if a node is allowed at that location for the currently select
2354.	wc_destroy // destroys the node that the player is nearest to looking at. (The node will be highlighted by a red box).
2355.	wc_destroy_undo // When in WC edit mode restores the last deleted node
2356.	wc_link_edit
2357.	weapon_accuracy_nospread "0" // Disable weapon inaccuracy spread
2358.	weapon_debug_spread_gap "0"
2359.	weapon_debug_spread_show "0" // 3: show accuracy with dynamic crosshair
2360.	weapon_recoil_cooldown "0" // Amount of time needed between shots before restarting recoil
2361.	weapon_recoil_decay1_exp "3" // Decay factor exponent for weapon recoil
2362.	weapon_recoil_decay2_exp "8" // Decay factor exponent for weapon recoil
2363.	weapon_recoil_decay2_lin "18" // Decay factor (linear term) for weapon recoil
2364.	weapon_recoil_scale "2" // Overall scale factor for recoil. Used to reduce recoil on specific platforms
2365.	weapon_recoil_scale_motion_controller "1" // Overall scale factor for recoil. Used to reduce recoil. Only for motion controllers
2366.	weapon_recoil_suppression_factor "0" // lerping to 1 for later shots
2367.	weapon_recoil_suppression_shots "4" // Number of shots before weapon uses full recoil
2368.	weapon_recoil_variance "0" // Amount of variance per recoil impulse
2369.	weapon_recoil_vel_decay "4" // Decay factor for weapon recoil velocity
2370.	weapon_recoil_view_punch_extra "0" // Additional (non-aim) punch added to view from recoil
2371.	weapon_reload_database // Reload the weapon database
2372.	whitelistcmd // Runs a whitelisted command.
2373.	windows_speaker_config "4"
2374.	wipe_nav_attributes // Clear all nav attributes of selected area.
2375.	workshop_start_map // Sets the first map to load once a workshop collection been hosted. Takes the file id of desired start map as a parameter.
2376.	workshop_workbench // Bring up the Workshop workbench dialog.
2377.	writeid // Writes a list of permanently-banned user IDs to banned_user.cfg.
2378.	writeip // Save the ban list to banned_ip.cfg.
2379.	xbox_autothrottle "1"
2380.	xbox_throttlebias "100"
2381.	xbox_throttlespoof "200"
2382.	xload // Load a saved game from a console storage device.
2383.	xlook
2384.	xmove
2385.	xsave // Saves current game to a console storage device.
2386.	zoom_sensitivity_ratio_joystick "1" // Additional controller sensitivity scale factor applied when FOV is zoomed in.
2387.	zoom_sensitivity_ratio_mouse "1" // Additional mouse sensitivity scale factor applied when FOV is zoomed in.
2388.	_autosave // Autosave
2389.	_autosavedangerous // AutoSaveDangerous
2390.	_bugreporter_restart // Restarts bug reporter .dll
2391.	_record // Record a demo incrementally.
2392.	_resetgamestats // Erases current game stats and writes out a blank stats file
2393.	_restart // Shutdown and restart the engine.

Additional voice commands Just type what is in the brackets in the console to activate it
Cover me! (coverme)
You take the point! (takepoint)
Hold this position! (holdpos)
Regroup team! (regroup)
Follow me (followme)
Taking fire, need assistance! (takingfire)

Go go go! (go)
Team, fall back! (fallback)
Stick together! (sticktog)
Get in position and wait for my go! (getinpos)
Storm the front! (stormfront)
Report in team! (report)

Roger that!/Affirmative! (roger)
Enemy spotted! (enemyspot)
Need backup! (enemyspot)
Sector Clear (sectorclear)
I'm in position. (inposition)
Reporting in. (reportingin)
Get out of there, it's gonna blow! (getout)
Negative! (negative)
Enemy Down! (enemydown)
